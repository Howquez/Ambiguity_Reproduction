{
  "hash": "a4dc5773d6c8171964659d355b884fb8",
  "result": {
    "markdown": "# Online Appendix B {#sec-OAB}\n\n## Setup\n\n### Install Packages\n\nWe install the following packages using the `groundhog` package manager to increase computational reproducibility.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!requireNamespace(\"groundhog\", quietly = TRUE)) {\n    install.packages(\"groundhog\")\n}\n\npkgs <- c(\"magrittr\", \"data.table\", \"stringr\", \"lubridate\", \"knitr\", \"glue\",\n          \"sandwich\", \"lmtest\",\n          \"ggplot2\", \"ggpubr\", \"rstatix\", \"patchwork\")\n\ngroundhog::groundhog.library(pkg = pkgs,\n                             date = \"2024-08-01\")\n\nrm(pkgs)\n```\n:::\n\n\n### Read Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# data <- data.table::fread(file = \"../data/processed/full.csv\")\ndata <- readRDS(file=\"../data/processed/full.Rda\")\n```\n:::\n\n\n\n### Design\n\nWe define some design features in the following:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolors <- c(\"#F3B05C\", \"#1E4A75\", \"#65B5C0\", \"#AD5E21\")\n\nlayout <- theme(panel.background = element_rect(fill = \"white\"),\n                legend.key = element_rect(fill = \"white\"),\n                panel.grid.major.y = element_line(colour = \"grey\", \n                                                  linewidth = 0.25),\n                axis.ticks.y = element_blank(),\n                panel.grid.major.x = element_blank(),\n                axis.line.x.bottom = element_line(colour = \"#000000\", \n                                                  linewidth = 0.5),\n                axis.line.y.left = element_blank(),\n                plot.title = element_text(size = rel(1))\n)\n```\n:::\n\n\n\n### Helper Function\n\n\n\n\n::: {.cell}\n\n```{#lst-plot-bars .r .cell-code  caption=\"plot_bars()\"}\nplot_bars <- function(response = \"b\", surprise_sub = NA, limits = ylim(-0.1, 100.1)){\n  \n  if(response == \"b\"){\n      y_1 = 75\n      y_2 = 55\n    } else {\n      y_1 = 75\n      y_2 = 60\n    }\n  \n  if(!is.na(surprise_sub)){\n    # Plot bottom panels\n    tmp <- data[surprise == surprise_sub]\n    names(tmp)[names(tmp) == response] <- 'outcome'\n    \n    if(surprise_sub){\n      title <- \"Surprising Condition\"\n    } else {\n      title <- \"Confirming Condition\"\n    }\n    \n    test_stats_1 <- tmp %>% \n      group_by(communication) %>%\n      wilcox_test(formula = outcome ~ stage,\n                  paired = T) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    \n    \n    test_stats_2 <- tmp %>% \n      group_by(stage) %>%\n      wilcox_test(formula = outcome ~ communication) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    test_stats_2 <- test_stats_2[stage == 2]\n    \n    plot_bottom <- ggplot(data = tmp,\n           mapping = aes(x = as.factor(communication),\n                         y = outcome)) +\n        geom_bar(aes(fill = stage),\n                 position = \"dodge\", \n                 stat = \"summary\", \n                 fun = \"mean\") + \n      limits +\n      scale_fill_manual(values=c(\"black\", \"gray\")) +\n      theme_classic() +\n      stat_pvalue_manual(data = test_stats_2,\n                         label = \"{p} ({p.adj.signif})\", \n                         step.group.by = \"stage\",\n                         tip.length = 0, \n                         step.increase = 0.1, \n                         y.position = y_1) +\n      stat_pvalue_manual(data = test_stats_1,\n                         label = \"{p} ({p.adj.signif})\",\n                         y.position = y_2,\n                         tip.length = 0,\n                         x = \"communication\") +\n      labs(title = \"\",\n           x = \" Surprising Condition\",\n           y = glue(\" {response}\"))\n    \n    rm(tmp)\n    \n    plot_bottom\n  } else {\n    # Plot the top panel\n    tmp <- data\n    names(tmp)[names(tmp) == response] <- 'outcome'\n    \n    title <- \"Both Conditions\"\n    \n    test_stats_1 <- tmp %>% \n      group_by(surprise) %>%\n      wilcox_test(formula = outcome ~ stage,\n                  paired = T) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    \n    \n    test_stats_2 <- tmp %>% \n      group_by(stage) %>%\n      wilcox_test(formula = outcome ~ surprise) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    test_stats_2 <- test_stats_2[stage == 2]\n    \n    \n    plot_top <- ggplot(data = tmp,\n           mapping = aes(x = as.factor(surprise),\n                         y = outcome)) +\n        geom_bar(aes(fill = stage),\n                 position = \"dodge\", \n                 stat = \"summary\", \n                 fun = \"mean\") + \n      limits +\n      scale_fill_manual(values=c(\"black\", \"gray\")) +\n      theme_classic() +\n      stat_pvalue_manual(data = test_stats_2,\n                         label = \"{p} ({p.adj.signif})\", \n                         step.group.by = \"stage\",\n                         tip.length = 0, \n                         step.increase = 0.1, \n                         y.position = y_1) +\n      stat_pvalue_manual(data = test_stats_1,\n                         label = \"{p} ({p.adj.signif})\",\n                         y.position = y_2,\n                         tip.length = 0,\n                         x = \"surprise\") +\n      labs(title = \"\",\n           x = \" Surprising Condition\",\n           y = glue(\" {response}\"))\n    \n    rm(tmp)\n    \n    plot_top\n  }\n}\n```\n:::\n\n\n\n## Figure OB.1\n\nTo create @fig-OB1 (and the other figures), we use the wrapper function defined above. We'll call several times in what follows. As all the other figures presented in this document, @fig-OB1 consists of three panels, `top`, `left`, and `right` that are relatively similar. We thus, save both space and sources of error by creating a wrapper function `plot_bars()` that creates bar plots and annotates them with test statistics.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop   <- plot_bars(response = \"E1\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E1\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E1\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![Means of the matching probabilities for event E1 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant](B-online-appendix_files/figure-html/fig-OB1-1.png){#fig-OB1 width=672}\n:::\n:::\n\n\n## Figure OB.2\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E2` argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop   <- plot_bars(response = \"E2\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E2\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E2\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![Means of the matching probabilities for event E2 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant](B-online-appendix_files/figure-html/fig-OB2-1.png){#fig-OB2 width=672}\n:::\n:::\n\n\n\n## Figure OB.3\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E3` argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop   <- plot_bars(response = \"E3\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E3\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E3\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![Means of the matching probabilities for event E3 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant](B-online-appendix_files/figure-html/fig-OB3-1.png){#fig-OB3 width=672}\n:::\n:::\n\n\n## Figure OB.4\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E12` argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop   <- plot_bars(response = \"E12\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E12\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E12\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![Means of the matching probabilities for event E12 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant](B-online-appendix_files/figure-html/fig-OB4-1.png){#fig-OB4 width=672}\n:::\n:::\n\n\n\n## Figure OB.5\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E13` argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop   <- plot_bars(response = \"E13\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E13\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E13\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![Means of the matching probabilities for event E13 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant](B-online-appendix_files/figure-html/fig-OB5-1.png){#fig-OB5 width=672}\n:::\n:::\n\n\n\n## Figure OB.6\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E23` argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop   <- plot_bars(response = \"E23\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E23\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E23\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n::: {.cell-output-display}\n![Means of the matching probabilities for event E23 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant](B-online-appendix_files/figure-html/fig-OB6-1.png){#fig-OB6 width=672}\n:::\n:::\n",
    "supporting": [
      "B-online-appendix_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
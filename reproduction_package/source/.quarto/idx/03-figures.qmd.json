{"title":"Figures","markdown":{"headingText":"Figures","containsRefs":false,"markdown":"\nThis document explains how to reproduce the figures presented in the paper.\n\n## Install Packages\n\nWe install the following packages using the `groundhog` package manager to increase computational reproducibility.\n\n```{r install_packages}\n#| output: false\n\noptions(repos = c(CRAN = \"https://cran.r-project.org\")) \n\n\nif (!requireNamespace(\"groundhog\", quietly = TRUE)) {\n    install.packages(\"groundhog\")\n}\n\npkgs <- c(\"magrittr\", \"data.table\", \"stringr\", \"lubridate\", \"knitr\", \"glue\",\n          \"sandwich\", \"lmtest\",\n          \"ggplot2\", \"ggpubr\", \"rstatix\", \"patchwork\")\n\ngroundhog::groundhog.library(pkg = pkgs,\n                             date = \"2024-08-01\")\n\nrm(pkgs)\n```\n\n## Read Data\n\n```{r read_data}\n# data <- data.table::fread(file = \"../data/processed/full.csv\")\ndata <- readRDS(file=\"../data/processed/full.Rda\")\n```\n\n\n## Figure 1\n\nTo create @fig-1 (and `fig-2`), we create a wrapper function that we can call several times. As all the other figures presented in this document, @fig-1 consists of three panels, `top`, `left`, and `right` that are relatively similar. We thus, save both space and sources of error by creating a wrapper function `plot_bars()` that creates bar plots and annotates them with test statistics.\n\n\n\n```{r bar_function}\n\nplot_bars <- function(response = \"b\", surprise_sub = NA, limits = ylim(-1.02, 1.02)){\n  \n  if(response == \"b\"){\n      y_1 = 0.6\n      y_2 = 0.4\n    } else {\n      y_1 = 1.4\n      y_2 = 1\n    }\n  \n  if(!is.na(surprise_sub)){\n    # Plot bottom panels\n    tmp <- data[surprise == surprise_sub]\n    names(tmp)[names(tmp) == response] <- 'outcome'\n    \n    if(surprise_sub){\n      title <- \"Surprising Condition\"\n    } else {\n      title <- \"Confirming Condition\"\n    }\n    \n    test_stats_1 <- tmp %>% \n      group_by(communication) %>%\n      wilcox_test(formula = outcome ~ stage,\n                  paired = T) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    \n    \n    test_stats_2 <- tmp %>% \n      group_by(stage) %>%\n      wilcox_test(formula = outcome ~ communication) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    test_stats_2 <- test_stats_2[stage == 2]\n    \n    plot_bottom <- ggplot(data = tmp,\n           mapping = aes(x = as.factor(communication),\n                         y = outcome)) +\n        geom_bar(aes(fill = stage),\n                 position = \"dodge\", \n                 stat = \"summary\", \n                 fun = \"mean\") + \n      limits +\n      scale_fill_manual(values=c(\"black\", \"gray\")) +\n      theme_classic() +\n      stat_pvalue_manual(data = test_stats_2,\n                         label = \"{p} ({p.adj.signif})\", \n                         step.group.by = \"stage\",\n                         tip.length = 0, \n                         step.increase = 0.1, \n                         y.position = y_1) +\n      stat_pvalue_manual(data = test_stats_1,\n                         label = \"{p} ({p.adj.signif})\",\n                         y.position = y_2,\n                         tip.length = 0,\n                         x = \"communication\") +\n      labs(title = title,\n           x = \"Communication\",\n           y = glue(\"Ambiguity index {response} (Baillon)\"))\n    \n    rm(tmp)\n    \n    plot_bottom\n  } else {\n    # Plot the top panel\n    tmp <- data\n    names(tmp)[names(tmp) == response] <- 'outcome'\n    \n    title <- \"Both Conditions\"\n    \n    test_stats_1 <- tmp %>% \n      group_by(surprise) %>%\n      wilcox_test(formula = outcome ~ stage,\n                  paired = T) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    \n    \n    test_stats_2 <- tmp %>% \n      group_by(stage) %>%\n      wilcox_test(formula = outcome ~ surprise) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    test_stats_2 <- test_stats_2[stage == 2]\n    \n    \n    plot_top <- ggplot(data = tmp,\n           mapping = aes(x = as.factor(surprise),\n                         y = outcome)) +\n        geom_bar(aes(fill = stage),\n                 position = \"dodge\", \n                 stat = \"summary\", \n                 fun = \"mean\") + \n      limits +\n      scale_fill_manual(values=c(\"black\", \"gray\")) +\n      theme_classic() +\n      stat_pvalue_manual(data = test_stats_2,\n                         label = \"{p} ({p.adj.signif})\", \n                         step.group.by = \"stage\",\n                         tip.length = 0, \n                         step.increase = 0.1, \n                         y.position = y_1) +\n      stat_pvalue_manual(data = test_stats_1,\n                         label = \"{p} ({p.adj.signif})\",\n                         y.position = y_2,\n                         tip.length = 0,\n                         x = \"surprise\") +\n      labs(title = title,\n           x = \" Surprising Condition\",\n           y = glue(\"Ambiguity index {response} (Baillon)\"))\n    \n    rm(tmp)\n    \n    plot_top\n  }\n}\n\n```\n\n```{r fig_1}\n#| label: fig-1\n#| fig-cap: 'Means of ambiguity index b separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'\n\ntop   <- plot_bars(response = \"b\", surprise_sub = NA)\nleft  <- plot_bars(response = \"b\", surprise_sub = FALSE)\nright <- plot_bars(response = \"b\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n## Figure 2\n\nNext, we use the wrapper function again but visualize another outcome using the `response == a` argument.\n\n```{r fig_2}\n#| warning: false\n#| label: fig-2\n#| fig-cap: 'Means of ambiguity index a separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'\n\ntop   <- plot_bars(response = \"a\", limits = ylim(-2.01, 4.01), surprise_sub = NA)\nleft  <- plot_bars(response = \"a\", limits = ylim(-2.01, 4.01), surprise_sub = FALSE)\nright <- plot_bars(response = \"a\", limits = ylim(-2.01, 4.01), surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n## Figure 3 {#sec-fig-3}\n\n@fig-3 also presents three panels. In contrast to @fig-1 and @fig-2, these panels visualize confidence intervals of our estimator of interest: the interaction of `stage` and `surprise` (top panel) as well as the interaction between `stage` and `communication` in the lower two panels.\n\nThe corresponding data stems from many OLS regressions and are computed in for-loops. Even though the code differs slightly, it is very repetitive between the three panels, which is why we only explain the top panel\n\n### Top Panel\n\nBefore calculating the data based on OLS regressions, we specify three different models: `none` represents only treatment variables, `demographics` extends the former by adding demographic variables, and `all` extends the former two by also adding all remaining covariates.\n\n```{r covariates_top}\nnone <- c(\"surprise\", \"treated\", \"surprise*treated\")\n\ndemographics <- c(none, \"age_35_52\",\"age_53_plus\",\"female\", \"high_education\", \"high_income\", \"married\", \"parentship\")\n\nall <- c(demographics, \"high_temperature\",\"high_usage\",\"high_general_risk\",\"high_weather_risk\",\"high_accuracy\",\"high_credibility\")\n```\n\n\nNext, we run a nested loop that iterates through all three models and within these models through both ambiguity indices `a` and `b`. From these ols regressions, we compute clustered standard errors using the `{{sandwich}}` and `{{lmtest}}` package. The resuling data is stored in a temporary data.table that is appended to an initially empty data.table called `ci_top`.\n\n```{r data_top}\nci_top <- data.table()\nfor(RHS in c(\"none\", \"demographics\", \"all\")){\n  for(LHS in c(\"a\", \"b\")){\n    ols <- lm(formula = reformulate(termlabels = get(RHS), \n                                    response = LHS),\n              data = data)\n    \n    tmp <- coefci(x = ols,\n                  parm = \"surpriseTRUE:treatedTRUE\",\n                  vcov = vcovCL(x = ols, \n                                cluster = data$participant.label, \n                                type = \"HC1\"),\n                  level = 0.95) %>% \n      data.table(model = RHS, outcome = LHS)\n    tmp[, center := (`2.5 %` + `97.5 %`)/2]\n    \n    ci_top <- rbind(ci_top, tmp)\n  }\n}\n```\n\nThe result looks as follows. The data.table provides a column for the 2.5% and 97.5% confidence interval, the center of the two, as well as the ols specification as presented in `model` and `outcome`.\n\n```{r}\nci_top %>% head(n = 7) %>% kable()\n```\n\nFinally, we plot this data set (`ci_top`) using the `{{ggplot2}}` package. The resulting object is stored as `top` and will be assembled together with the other two panels.\n\n```{r viz_top}\ntop <- ggplot(data = ci_top,\n       mapping = aes(y = outcome)) +\n  geom_pointrange(mapping = aes(x = center,\n                                y = outcome,\n                                xmin = `2.5 %`,\n                                xmax = `97.5 %`,\n                                shape = factor(model)),\n                  data = ci_top,\n                  position = position_dodge(width = 0.4),\n                  fatten=5,\n                  alpha=.8) +\n  geom_vline(xintercept = 0, \n             color = \"red\", \n             alpha = 0.66, \n             show.legend = FALSE) +\n  theme_bw() +\n  labs(#title = \"(a) Effect of contradiction (relative to confirmation)\",\n       y = \"Ambiguity Index\", \n       x = \"Estimate\",\n       shape=\"Control variables\")\n```\n\n\n### Left Panel\n\n```{r covariates_left}\nnone <- c(\"communication\", \"treated\", \"communication*treated\")\n\ndemographics <- c(none, \"age_35_52\",\"age_53_plus\",\"female\", \"high_education\", \"high_income\", \"married\", \"parentship\")\n\nall <- c(demographics, \"high_temperature\",\"high_usage\",\"high_general_risk\",\"high_weather_risk\",\"high_accuracy\",\"high_credibility\")\n```\n\n```{r data_left}\nci_left <- data.table()\nfor(RHS in c(\"none\", \"demographics\", \"all\")){\n  for(LHS in c(\"a\", \"b\")){\n    ols <- lm(formula = reformulate(termlabels = get(RHS), \n                                    response = LHS),\n              data = data,\n              subset = (surprise == FALSE))\n    for(communication in c(\"interval\", \"both\")){\n      tmp <- coefci(x = ols,\n                    parm = paste0(\"communication\", communication, \":treatedTRUE\"),\n                    vcov = vcovCL(x = ols, \n                                  cluster = data[surprise == FALSE,\n                                                 participant.label], \n                                  type = \"HC1\"),\n                    level = 0.95) %>% \n        data.table(model = RHS, outcome = paste0(LHS, \" (\", communication, \")\"))\n      tmp[, center := (`2.5 %` + `97.5 %`)/2]\n      \n      ci_left <- rbind(ci_left, tmp)\n    }\n  }\n}\n```\n\n```{r}\nci_left %>% head(n = 7) %>% kable()\n```\n\n```{r viz_left}\nleft <- ggplot(data = ci_left,\n       mapping = aes(y = outcome)) +\n  geom_pointrange(mapping = aes(x = center,\n                                y = outcome,\n                                xmin = `2.5 %`,\n                                xmax = `97.5 %`,\n                                shape = factor(model)),\n                  data = ci_left,\n                  position = position_dodge(width = 0.4),\n                  fatten=5,\n                  alpha=.8) +\n  geom_vline(xintercept = 0, \n             color = \"red\", \n             alpha = 0.66, \n             show.legend = FALSE) +\n  theme_bw() +\n  labs(#title = \"(b) Effect of information treatments (both, interval) relative to best guess, confirmation treatments\",\n       y = \"Ambiguity Index\", \n       x = \"Estimate\",\n       shape=\"Control variables\")\n```\n\n### Right Panel\n\n```{r data_right}\nci_right <- data.table()\nfor(RHS in c(\"none\", \"demographics\", \"all\")){\n  for(LHS in c(\"a\", \"b\")){\n    ols <- lm(formula = reformulate(termlabels = get(RHS), \n                                    response = LHS),\n              data = data,\n              subset = (surprise == TRUE))\n    for(communication in c(\"interval\", \"both\")){\n      tmp <- coefci(x = ols,\n                    parm = paste0(\"communication\", communication, \":treatedTRUE\"),\n                    vcov = vcovCL(x = ols, \n                                  cluster = data[surprise == TRUE,\n                                                 participant.label], \n                                  type = \"HC1\"),\n                    level = 0.95) %>% \n        data.table(model = RHS, outcome = paste0(LHS, \" (\", communication, \")\"))\n      tmp[, center := (`2.5 %` + `97.5 %`)/2]\n      \n      ci_right <- rbind(ci_right, tmp)\n    }\n  }\n}\n```\n\n```{r}\nci_right %>% head(n = 7) %>% kable()\n```\n\n```{r viz_right}\nright <- ggplot(data = ci_right,\n       mapping = aes(y = outcome)) +\n  geom_pointrange(mapping = aes(x = center,\n                                y = outcome,\n                                xmin = `2.5 %`,\n                                xmax = `97.5 %`,\n                                shape = factor(model)),\n                  data = ci_right,\n                  position = position_dodge(width = 0.4),\n                  fatten=5,\n                  alpha=.8) +\n  geom_vline(xintercept = 0, \n             color = \"red\", \n             alpha = 0.66, \n             show.legend = FALSE) +\n  theme_bw() +\n  labs(#title = \"(c) Effect of information treatments (both, interval) relative to best guess, contradiction treatments\",\n       y = \"Ambiguity Index\", \n       x = \"Estimate\",\n       shape=\"Control variables\") +\n  scale_y_discrete(position = \"right\")\n```\n\n### Assemble Top, Left and Right Panels\n\n\nAs before, we use the `{{patchwork}}` package to assmble the plot objects.\n\n```{r fig_3}\n#| label: fig-3\n#| fig-cap: 'Treatment effects of regression equation (1) with dependent variables b and a. Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020).'\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n\n\n## Figure 4\n\nThe process of producing @fig-4 is very similar to the process of @fig-3. The only difference is that we do not loop through the outcomes `a` and `b` but the events' matching probabilities (`E1`, `E2`, `...`, `E23`).\n\nTo loop through these variables, we use a regex (`E\\\\d`) to create a vector called `events`.\n\n```{r event_cols}\nevents <- names(data) %>% str_subset(pattern = \"E\\\\d\")\n```\n\n\nBecause the process is, from now on, so similar to the process of @fig-3, we do not comment it any further here.\n\n\n### Top Panel\n\n```{r covariates_top_4}\nnone <- c(\"surprise\", \"treated\", \"surprise*treated\")\n\ndemographics <- c(none, \"age_35_52\",\"age_53_plus\",\"female\", \"high_education\", \"high_income\", \"married\", \"parentship\")\n\nall <- c(demographics, \"high_temperature\",\"high_usage\",\"high_general_risk\",\"high_weather_risk\",\"high_accuracy\",\"high_credibility\")\n```\n\n```{r data_top_4}\nci_top <- data.table()\nfor(RHS in c(\"none\", \"demographics\", \"all\")){\n  for(LHS in events){\n    ols <- lm(formula = reformulate(termlabels = get(RHS), \n                                    response = LHS),\n              data = data)\n    \n    tmp <- coefci(x = ols,\n                  parm = \"surpriseTRUE:treatedTRUE\",\n                  vcov = vcovCL(x = ols, \n                                cluster = data$participant.label, \n                                type = \"HC1\"),\n                  level = 0.95) %>% data.table(model = RHS, outcome = LHS)\n    tmp[, center := (`2.5 %` + `97.5 %`)/2]\n    \n    ci_top <- rbind(ci_top, tmp)\n    \n    \n    ci_top[, outcome := as.factor(outcome)]\n    ci_top[, outcome := factor(outcome, \n                               levels = rev(c(\"E1\", \"E2\", \"E3\", \"E12\", \"E13\", \"E23\")))]\n  }\n}\n```\n\n```{r}\nci_top %>% head(n = 7) %>% kable()\n```\n\n```{r viz_top_4}\ntop <- ggplot(data = ci_top,\n       mapping = aes(y = outcome)) +\n  geom_pointrange(mapping = aes(x = center,\n                                y = outcome,\n                                xmin = `2.5 %`,\n                                xmax = `97.5 %`,\n                                shape = factor(model)),\n                  data = ci_top,\n                  position = position_dodge(width = 0.4),\n                  fatten=5,\n                  alpha=.8) +\n  geom_vline(xintercept = 0, \n             color = \"red\", \n             alpha = 0.66, \n             show.legend = FALSE) +\n  theme_bw() +\n  labs(y = \"Ambiguity Index\", \n       x = \"Estimate\",\n       shape=\"Control variables\")\n```\n\n### Left Panel\n\n```{r covariates_left_4}\nnone <- c(\"communication\", \"treated\", \"communication*treated\")\n\ndemographics <- c(none, \"age_35_52\",\"age_53_plus\",\"female\", \"high_education\", \"high_income\", \"married\", \"parentship\")\n\nall <- c(demographics, \"high_temperature\",\"high_usage\",\"high_general_risk\",\"high_weather_risk\",\"high_accuracy\",\"high_credibility\")\n```\n\n```{r data_left_4}\nci_left <- data.table()\nfor(RHS in c(\"none\", \"demographics\", \"all\")){\n  for(LHS in events){\n    ols <- lm(formula = reformulate(termlabels = get(RHS), \n                                    response = LHS),\n              data = data,\n              subset = (surprise == FALSE))\n    for(communication in c(\"interval\", \"both\")){\n      tmp <- coefci(x = ols,\n                    parm = paste0(\"communication\", communication, \":treatedTRUE\"),\n                    vcov = vcovCL(x = ols, \n                                  cluster = data[surprise == FALSE,\n                                                 participant.label], \n                                  type = \"HC1\"),\n                    level = 0.95) %>% \n        data.table(model = RHS, outcome = paste0(LHS, \" (\", communication, \")\"))\n      tmp[, center := (`2.5 %` + `97.5 %`)/2]\n      \n      ci_left <- rbind(ci_left, tmp)\n    }\n  }\n}\n```\n\n```{r}\nci_left %>% head(n = 7) %>% kable()\n```\n\n```{r viz_left_4}\nleft <- ggplot(data = ci_left,\n       mapping = aes(y = outcome)) +\n  geom_pointrange(mapping = aes(x = center,\n                                y = outcome,\n                                xmin = `2.5 %`,\n                                xmax = `97.5 %`,\n                                shape = factor(model)),\n                  data = ci_left,\n                  position = position_dodge(width = 0.4),\n                  fatten=5,\n                  alpha=.8) +\n  geom_vline(xintercept = 0, \n             color = \"red\", \n             alpha = 0.66, \n             show.legend = FALSE) +\n  theme_bw() +\n  labs(y = \"Ambiguity Index\", \n       x = \"Estimate\",\n       shape=\"Control variables\")\n```\n\n\n### Right Panel\n\n```{r data_right_4}\nci_right <- data.table()\nfor(RHS in c(\"none\", \"demographics\", \"all\")){\n  for(LHS in events){\n    ols <- lm(formula = reformulate(termlabels = get(RHS), \n                                    response = LHS),\n              data = data,\n              subset = (surprise == TRUE))\n    for(communication in c(\"interval\", \"both\")){\n      tmp <- coefci(x = ols,\n                    parm = paste0(\"communication\", communication, \":treatedTRUE\"),\n                    vcov = vcovCL(x = ols, \n                                  cluster = data[surprise == TRUE,\n                                                 participant.label], \n                                  type = \"HC1\"),\n                    level = 0.95) %>% \n        data.table(model = RHS, outcome = paste0(LHS, \" (\", communication, \")\"))\n      tmp[, center := (`2.5 %` + `97.5 %`)/2]\n      \n      ci_right <- rbind(ci_right, tmp)\n    }\n  }\n}\n```\n\n```{r}\nci_right %>% head(n = 7) %>% kable()\n```\n\n```{r viz_right_4}\nright <- ggplot(data = ci_right,\n       mapping = aes(y = outcome)) +\n  geom_pointrange(mapping = aes(x = center,\n                                y = outcome,\n                                xmin = `2.5 %`,\n                                xmax = `97.5 %`,\n                                shape = factor(model)),\n                  data = ci_right,\n                  position = position_dodge(width = 0.4),\n                  fatten=5,\n                  alpha=.8) +\n  geom_vline(xintercept = 0, \n             color = \"red\", \n             alpha = 0.66, \n             show.legend = FALSE) +\n  theme_bw() +\n  labs(y = \"Ambiguity Index\", \n       x = \"Estimate\",\n       shape=\"Control variables\") +\n  scale_y_discrete(position = \"right\")\n```\n\n\n### Assemble Top, Left and Right Panels\n\n```{r fig_4}\n#| label: fig-4\n#| fig-cap: 'Treatment effects of regression equation (1) with matching probabilities for all events as depen- dent variables. Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020).'\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n## Session Info {-}\n\n```{r}\nsessionInfo()\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","embed-resources":true,"output-file":"03-figures.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.132","bibliography":["references.bib"],"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}}}
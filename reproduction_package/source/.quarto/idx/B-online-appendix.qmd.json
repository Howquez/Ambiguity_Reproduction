{"title":"Online Appendix B","markdown":{"headingText":"Online Appendix B","containsRefs":false,"markdown":"\n## Setup\n\n### Install Packages\n\nWe install the following packages using the `groundhog` package manager to increase computational reproducibility.\n\n```{r install_packages}\n#| output: false\n\nif (!requireNamespace(\"groundhog\", quietly = TRUE)) {\n    install.packages(\"groundhog\")\n    library(\"groundhog\")\n}\n\npkgs <- c(\"magrittr\", \"data.table\", \"stringr\", \"lubridate\", \"knitr\", \"glue\",\n          \"sandwich\", \"lmtest\",\n          \"ggplot2\", \"ggpubr\", \"rstatix\", \"patchwork\")\n\ngroundhog::groundhog.library(pkg = pkgs,\n                             date = \"2023-09-25\")\n```\n\n### Read Data\n\n```{r read_data}\n# data <- data.table::fread(file = \"../data/processed/full.csv\")\ndata <- readRDS(file=\"../data/processed/full.Rda\")\n```\n\n### Manipulate Data\n\n`[Shall we add this code chunk to the pre-processing?]`\n\n```{r factorize}\ndata[, communication := as.factor(communication)]\ndata[, communication := factor(communication, levels = c(\"point\", \"both\",\"interval\"))]\ndata[, stage := as.factor(stage)]\ndata[, stage := factor(stage, levels = c(\"1\", \"2\"))]\n```\n\n### Design\n\nWe define some design features in the following:\n\n```{r design_features}\n\ncolors <- c(\"#F3B05C\", \"#1E4A75\", \"#65B5C0\", \"#AD5E21\")\n\nlayout <- theme(panel.background = element_rect(fill = \"white\"),\n                legend.key = element_rect(fill = \"white\"),\n                panel.grid.major.y = element_line(colour = \"grey\", \n                                                  linewidth = 0.25),\n                axis.ticks.y = element_blank(),\n                panel.grid.major.x = element_blank(),\n                axis.line.x.bottom = element_line(colour = \"#000000\", \n                                                  linewidth = 0.5),\n                axis.line.y.left = element_blank(),\n                plot.title = element_text(size = rel(1))\n)\n\n```\n\n\n### Helper Function\n\n```{r bar_function}\n#| lst-label: lst-plot-bars\n#| lst-cap: plot_bars()\n\nplot_bars <- function(response = \"E\", surprise_sub = NA, limits = ylim(-0.1, 100.1)){\n  \n  if(response == \"E1\"|response == \"E2\"|response == \"E3\"){\n      y_1 = 73\n      y_2 = 55\n    } else {\n      y_1 = 73\n      y_2 = 63\n    }\n  \n  if(!is.na(surprise_sub)){\n    # Plot bottom panels\n    tmp <- data[surprise == surprise_sub]\n    names(tmp)[names(tmp) == response] <- 'outcome'\n    \n    if(surprise_sub){\n      title <- \"Surprising Condition\"\n    } else {\n      title <- \"Confirming Condition\"\n    }\n    \n    test_stats_1 <- tmp %>% \n      group_by(communication) %>%\n      wilcox_test(formula = outcome ~ stage,\n                  paired = T) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    \n    \n    test_stats_2 <- tmp %>% \n      group_by(stage) %>%\n      wilcox_test(formula = outcome ~ communication) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    test_stats_2 <- test_stats_2[stage == 2]\n    \n    plot_bottom <- ggplot(data = tmp,\n           mapping = aes(x = as.factor(communication),\n                         y = outcome)) +\n        geom_bar(position = \"dodge\", \n                 stat = \"summary\", \n                 fun = \"mean\",\n                 fill = colors[2]) + \n      limits +\n      scale_y_continuous(limits = c(0, 100), expand = c(0, NA)) +\n      layout +\n      stat_pvalue_manual(data = test_stats_2,\n                         label = \"{p} ({p.adj.signif})\", \n                         step.group.by = \"stage\",\n                         tip.length = 0, \n                         step.increase = 0.1, \n                         y.position = y_1) +\n      stat_pvalue_manual(data = test_stats_1,\n                         label = \"{p} ({p.adj.signif})\",\n                         y.position = y_2,\n                         tip.length = 0,\n                         x = \"communication\") +\n      labs(title = title,\n           x = \"Communication\",\n           y = glue(\"{response}\"))\n    \n    rm(tmp)\n    \n    plot_bottom\n  } else {\n    # Plot the top panel\n    tmp <- data\n    names(tmp)[names(tmp) == response] <- 'outcome'\n    \n    title <- \"Both Conditions\"\n    \n    test_stats_1 <- tmp %>% \n      group_by(surprise) %>%\n      wilcox_test(formula = outcome ~ stage,\n                  paired = T) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    \n    \n    test_stats_2 <- tmp %>% \n      group_by(stage) %>%\n      wilcox_test(formula = outcome ~ surprise) %>% \n      adjust_pvalue(method = \"none\") %>%\n      add_significance(p.col = \"p.adj\",\n                       cutpoints = c(0, 0.01, 0.05, 0.1, 1),\n                       symbols = c( \"***\", \"**\", \"*\", \"ns\")) %>%\n      as.data.table()\n    test_stats_2 <- test_stats_2[stage == 2]\n    \n    \n    plot_top <- ggplot(data = tmp,\n           mapping = aes(x = as.factor(surprise),\n                         y = outcome)) +\n        geom_bar(position = \"dodge\", \n                 stat = \"summary\", \n                 fun = \"mean\",\n                 fill = colors[2]) + \n      limits +\n      scale_y_continuous(limits = c(0, 100), expand = c(0, NA)) +\n      layout +\n      stat_pvalue_manual(data = test_stats_2,\n                         label = \"{p} ({p.adj.signif})\", \n                         step.group.by = \"stage\",\n                         tip.length = 0, \n                         step.increase = 0.1, \n                         y.position = y_1) +\n      stat_pvalue_manual(data = test_stats_1,\n                         label = \"{p} ({p.adj.signif})\",\n                         y.position = y_2,\n                         tip.length = 0,\n                         x = \"surprise\") +\n      labs(title = title,\n           x = \" Surprising Condition\",\n           y = glue(\" {response}\"))\n    \n    rm(tmp)\n    \n    plot_top\n  }\n}\n\n```\n\n## Figure OB.1\n\nTo create @fig-OB1 (and the other figures), we use the wrapper function defined above. We'll call several times in what follows. As all the other figures presented in this document, @fig-OB1 consists of three panels, `top`, `left`, and `right` that are relatively similar. We thus, save both space and sources of error by creating a wrapper function `plot_bars()` that creates bar plots and annotates them with test statistics.\n\n\n```{r fig_ob1}\n#| label: fig-OB1\n#| fig-cap: 'Means of the matching probabilities for event E1 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'\n\ntop   <- plot_bars(response = \"E1\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E1\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E1\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n## Figure OB.2\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E2` argument.\n\n```{r fig_ob2}\n#| label: fig-OB2\n#| fig-cap: 'Means of the matching probabilities for event E2 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'\n\ntop   <- plot_bars(response = \"E2\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E2\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E2\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n\n## Figure OB.3\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E3` argument.\n\n```{r fig_ob3}\n#| label: fig-OB3\n#| fig-cap: 'Means of the matching probabilities for event E3 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'\n\ntop   <- plot_bars(response = \"E3\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E3\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E3\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n## Figure OB.4\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E12` argument.\n\n```{r fig_ob4}\n#| label: fig-OB4\n#| fig-cap: 'Means of the matching probabilities for event E12 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'\n\ntop   <- plot_bars(response = \"E12\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E12\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E12\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n\n## Figure OB.5\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E13` argument.\n\n```{r fig_ob5}\n#| label: fig-OB5\n#| fig-cap: 'Means of the matching probabilities for event E13 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'\n\ntop   <- plot_bars(response = \"E13\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E13\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E13\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n\n\n## Figure OB.6\n\nNext, we use the wrapper function again but visualize another outcome using the `response == E23` argument.\n\n```{r fig_ob6}\n#| label: fig-OB6\n#| fig-cap: 'Means of the matching probabilities for event E23 separated by treatments and part 1 and part 2. P-values of Wilcoxon signed-rank test comparing part 1 and 2 directly above the mean values. P-values of Wilcoxon–Mann–Whitney test comparing part 2 of different treatments at the top. Note: ∗p<0.10, ∗∗p<0.05, ∗∗∗p<0.01, ns: not significant'\n\ntop   <- plot_bars(response = \"E23\", surprise_sub = NA)\nleft  <- plot_bars(response = \"E23\", surprise_sub = FALSE)\nright <- plot_bars(response = \"E23\", surprise_sub = TRUE)\n\n(top / (left | right) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","embed-resources":true,"output-file":"B-online-appendix.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.132","bibliography":["references.bib"],"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}}}
{"title":"Online Appendix C","markdown":{"headingText":"Online Appendix C","containsRefs":false,"markdown":"\n## Setup\n\n### Install Packages\n\nWe install the following packages using the `groundhog` package manager to increase computational reproducibility.\n\n```{r install_packages}\n#| output: false\n\nif (!requireNamespace(\"groundhog\", quietly = TRUE)) {\n    install.packages(\"groundhog\")\n}\n\npkgs <- c(\"magrittr\", \"data.table\", \"stringr\", \"Rmisc\", \"ggplot2\", \"patchwork\",\n          \"rstatix\", \"ggpubr\", \"glue\", \"lubridate\", \"plyr\", \n          \"lmtest\", \"sandwich\", \"stargazer\" # packages for regression tables\n          )\n\ngroundhog::groundhog.library(pkg = pkgs,\n                             date = \"2024-08-01\")\n\nrm(pkgs)\n```\n\n### Read Data\n\n```{r read_data}\n# data <- data.table::fread(file = \"../data/processed/full.csv\")\ndata <- readRDS(file=\"../data/processed/full.Rda\")\n```\n\n### Manipulate Data\n\n\n```{r probabilites}\ncols <- str_subset(string = names(data), pattern = \"E\\\\d+\")\ndata[, \n     str_replace_all(string = cols, pattern = \"^E\", replacement = \"m\") := lapply(.SD, function(x) x / 100), \n     .SDcols = cols] \n\ndata[, p1 := 0.5 + (m1 - m23)/ (6*(mc-ms))]\ndata[, p2 := 0.5 + (m2 - m13)/ (6*(mc-ms))]\ndata[, p3 := 0.5 + (m3 - m12)/ (6*(mc-ms))]\n```\n\n```{r wide_data}\nwide_data <- data.table::dcast(data, \n                                participant.label + surprise + communication ~ stage, \n                                value.var = c(\"E1\", \"E2\", \"E3\", \"E12\", \"E23\",\"E13\", \"b\", \"a\"))\n\nsetorder(wide_data, surprise, communication, participant.label)\n```\n\n\n### Design\n\nWe define some design features in the following:\n\n```{r design_features}\n\ncolors <- c(\"#F3B05C\", \"#1E4A75\", \"#65B5C0\", \"#AD5E21\")\n\nlayout <- theme(panel.background = element_rect(fill = \"white\"),\n                legend.key = element_rect(fill = \"white\"),\n                panel.grid.major.y = element_line(colour = \"grey\", \n                                                  linewidth = 0.25),\n                axis.ticks.y = element_blank(),\n                panel.grid.major.x = element_blank(),\n                axis.line.x.bottom = element_line(colour = \"#000000\", \n                                                  linewidth = 0.5),\n                axis.line.y.left = element_blank(),\n                plot.title = element_text(size = rel(1))\n)\n\n```\n\n\n### Helper Function\n\n\nTo create @fig-oc1 (and the other figures), we create a wrapper function that we can call several times. Figures such as @fig-oc1 consist of eight panels, that are relatively similar. We thus, save both space and sources of error by creating a wrapper function `plot_scatter()` that creates scatter plots. To annotate and scale these plots, we also create a wrapper function for `plot_scatter()` called `plot_scatter_with_defaults()`. The latter function is called in the script below and contains some hard-coded defaults that determine annotations and the scales, i.e., where the annotations are placed.\n\n```{r scatter_function}\n\nplot_scatter <- function(outcome.y = \"b_2\", \n                         outcome.x = \"b_1\", \n                         DT = wide_data[surprise == FALSE & communication == \"both\"], \n                         breaks = seq(from = -1, to = 1, by = 0.5), \n                         limits = c(-1, 1), \n                         # manual annotation positions:\n                         x1 = 0.9,\n                         x2 = 0.3,\n                         x3 = -0.6,\n                         x4 = 0.6, \n                         y1 = - 0.115,\n                         y2 = 1.05,\n                         y3 = 0.7,\n                         y4 = -0.7){\n  \n  \n  # Percentage Annotation\n  p1 <- scales::percent(x = sum(DT[,..outcome.y] > DT[,..outcome.x], na.rm = TRUE) / DT[, .N], \n                        accuracy = 1)\n  p2 <- scales::percent(x = sum(DT[,..outcome.y] < DT[,..outcome.x], na.rm = TRUE) / DT[, .N], \n                        accuracy = 1)\n  \n  # Spearman Correlation for Subtitle\n  ro.value <- round(x = cor(DT[,..outcome.x], \n                            DT[,..outcome.y], \n                            method = c(\"spearman\")),\n                    digits = 2)\n  \n  \n  # Plot\n  plot <- ggplot(data = DT,\n                 mapping = aes(x = get(outcome.x),\n                               y = get(outcome.y))) +\n    geom_count(shape = 1, show.legend = FALSE) +\n    \n    # add axes and diagonal\n    geom_vline(xintercept = 0) +\n    geom_hline(yintercept = 0) +\n    geom_abline(intercept = 0, slope = 1, linewidth = 0.6) +\n    \n    # remove all the other lines\n    theme(line = element_blank(), \n          panel.background = element_rect(fill = \"white\",\n                                          colour = \"white\",\n                                          linetype = \"solid\")) +\n    \n    # define axis labels\n    labs(x = as.expression(bquote(rho~\"=\"~.(ro.value))),\n         y = \"\") +\n    \n    # add annotations\n    geom_text(x = x1, y = y1, label = \"Part 1\") +\n    geom_text(x = x2, y = y2, label = \"Part 2\") +\n    geom_text(x = x3, y = y3, label = p1) +\n    geom_text(x = x4, y = y4, label = p2) +\n  \n    # define consistent axis breaks etc.\n    scale_x_continuous(breaks = breaks, lim = limits) +\n    scale_y_continuous(breaks = breaks, lim = limits)\n    \n    plot\n  \n}\n\n# Wrapper function with a consistent parameter handling approach\nplot_scatter_with_defaults <- function(DT, figure = \"oc1\") {\n  # Define defaults for each set\n  defaults <- list(\n    oc1 = list(outcome.y = \"b_2\", outcome.x = \"b_1\",\n               breaks = seq(from = -1, to = 1, by = 0.5), \n               limits = c(-1, 1), \n               x1 = 0.9, x2 = 0.3, x3 = -0.6, x4 = 0.6, \n               y1 = -0.115, y2 = 1.05, y3 = 0.7, y4 = -0.7),\n    oc2 = list(outcome.y = \"a_2\", outcome.x = \"a_1\",\n               breaks = seq(from = -2, to = 4, by = 1), \n               limits = c(-2, 4), \n               x1 = 3.4, x2 = 0.8, x3 = -1.5, x4 = 1.5, \n               y1 = -0.4, y2 = 0.39, y3 = 1.9, y4 = -1.9),\n    oc3 = list(outcome.y = \"E1_2\", outcome.x = \"E1_1\",\n               breaks = seq(from = 0, to = 100, by = 50), \n               limits = c(0, 101), \n               x1 = 90, x2 = 15, x3 = 15, x4 = 90, \n               y1 = 5, y2 = 100, y3 = 80, y4 = 20),\n    oc4 = list(outcome.y = \"E2_2\", outcome.x = \"E2_1\",\n               breaks = seq(from = 0, to = 100, by = 50), \n               limits = c(0, 101), \n               x1 = 90, x2 = 15, x3 = 15, x4 = 90, \n               y1 = 5, y2 = 100, y3 = 80, y4 = 20),\n    oc5 = list(outcome.y = \"E3_2\", outcome.x = \"E3_1\",\n               breaks = seq(from = 0, to = 100, by = 50), \n               limits = c(0, 101), \n               x1 = 90, x2 = 15, x3 = 15, x4 = 90, \n               y1 = 5, y2 = 100, y3 = 80, y4 = 20),\n    oc6 = list(outcome.y = \"E12_2\", outcome.x = \"E12_1\",\n               breaks = seq(from = 0, to = 100, by = 50), \n               limits = c(0, 101), \n               x1 = 90, x2 = 15, x3 = 15, x4 = 90, \n               y1 = 5, y2 = 100, y3 = 80, y4 = 20),\n    oc7 = list(outcome.y = \"E13_2\", outcome.x = \"E13_1\",\n               breaks = seq(from = 0, to = 100, by = 50), \n               limits = c(0, 101), \n               x1 = 90, x2 = 15, x3 = 15, x4 = 90, \n               y1 = 5, y2 = 100, y3 = 80, y4 = 20),\n    oc8 = list(outcome.y = \"E23_2\", outcome.x = \"E23_1\",\n               breaks = seq(from = 0, to = 100, by = 50), \n               limits = c(0, 101), \n               x1 = 90, x2 = 15, x3 = 15, x4 = 90, \n               y1 = 5, y2 = 100, y3 = 80, y4 = 20)\n  )\n  \n  # Remove the non-required default params before calling the plot function\n  default_params <- defaults[[figure]]\n  \n  # Combine all parameters\n  args <- c(list(DT = DT), default_params)\n  \n  # Call the original plot function with the combined arguments\n  do.call(plot_scatter, args)\n}\n```\n\n\n\n## Figure OC.1\n\nIn what follows, we will call the custom functions defined above.\n\n```{r fig_oc1}\n#| label: fig-oc1\n#| fig-cap: 'Scatterplot of the ambiguity index b. The relationship between part 1 and part 2 separated by treatments with correlation coefficients and percentages above and below the diagonal.'\n\n\ntop1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE], figure = \"oc1\")\n\ntop2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE], figure = \"oc1\")\n\nmid1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"point\"], figure = \"oc1\")\n\nmid2 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"interval\"], figure = \"oc1\")\n\nmid3 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"both\"], figure = \"oc1\")\n\nbot1 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"point\"], figure = \"oc1\")\n\nbot2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"interval\"], figure = \"oc1\")\n\nbot3 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"both\"], figure = \"oc1\")\n\n((top1|top2) / (mid1 | mid2 | mid3) / (bot1 | bot2 | bot3) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n\n```\n\n\n## Figure OC.2\n\n```{r fig_oc2}\n#| label: fig-oc2\n#| fig-cap: 'Scatterplot of the ambiguity index a. The relationship between part 1 and part 2 separated by treatments with correlation coefficients and percentages above and below the diagonal.'\n\n\ntop1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE], figure = \"oc2\")\n\ntop2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE], figure = \"oc2\")\n\nmid1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"point\"], figure = \"oc2\")\n\nmid2 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"interval\"], figure = \"oc2\")\n\nmid3 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"both\"], figure = \"oc2\")\n\nbot1 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"point\"], figure = \"oc2\")\n\nbot2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"interval\"], figure = \"oc2\")\n\nbot3 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"both\"], figure = \"oc2\")\n\n((top1|top2) / (mid1 | mid2 | mid3) / (bot1 | bot2 | bot3) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n\n```\n\n## Figure OC.3\n\n```{r fig_oc3}\n#| label: fig-oc3\n#| fig-cap: 'Scatterplot of the matching probabilities for event E1. The relationship between part 1 and part 2 separated by treatments with correlation coefficients and percentages above and below the diagonal.'\n\n\ntop1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE], figure = \"oc3\")\n\ntop2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE], figure = \"oc3\")\n\nmid1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"point\"], figure = \"oc3\")\n\nmid2 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"interval\"], figure = \"oc3\")\n\nmid3 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"both\"], figure = \"oc3\")\n\nbot1 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"point\"], figure = \"oc3\")\n\nbot2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"interval\"], figure = \"oc3\")\n\nbot3 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"both\"], figure = \"oc3\")\n\n((top1|top2) / (mid1 | mid2 | mid3) / (bot1 | bot2 | bot3) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n\n```\n\n## Figure OC.4\n\n```{r fig_oc4}\n#| label: fig-oc4\n#| fig-cap: 'Scatterplot of the matching probabilities for event E2. The relationship between part 1 and part 2 separated by treatments with correlation coefficients and percentages above and below the diagonal.'\n\n\ntop1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE], figure = \"oc4\")\n\ntop2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE], figure = \"oc4\")\n\nmid1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"point\"], figure = \"oc4\")\n\nmid2 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"interval\"], figure = \"oc4\")\n\nmid3 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"both\"], figure = \"oc4\")\n\nbot1 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"point\"], figure = \"oc4\")\n\nbot2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"interval\"], figure = \"oc4\")\n\nbot3 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"both\"], figure = \"oc4\")\n\n((top1|top2) / (mid1 | mid2 | mid3) / (bot1 | bot2 | bot3) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n\n```\n\n## Figure OC.5\n\n```{r fig_oc5}\n#| label: fig-oc5\n#| fig-cap: 'Scatterplot of the matching probabilities for event E3. The relationship between part 1 and part 2 separated by treatments with correlation coefficients and percentages above and below the diagonal.'\n\n\ntop1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE], figure = \"oc5\")\n\ntop2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE], figure = \"oc5\")\n\nmid1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"point\"], figure = \"oc5\")\n\nmid2 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"interval\"], figure = \"oc5\")\n\nmid3 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"both\"], figure = \"oc5\")\n\nbot1 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"point\"], figure = \"oc5\")\n\nbot2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"interval\"], figure = \"oc5\")\n\nbot3 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"both\"], figure = \"oc5\")\n\n((top1|top2) / (mid1 | mid2 | mid3) / (bot1 | bot2 | bot3) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n\n```\n\n## Figure OC.6\n\n```{r fig_oc6}\n#| label: fig-oc6\n#| fig-cap: 'Scatterplot of the matching probabilities for event E12. The relationship between part 1 and part 2 separated by treatments with correlation coefficients and percentages above and below the diagonal.'\n\n\ntop1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE], figure = \"oc6\")\n\ntop2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE], figure = \"oc6\")\n\nmid1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"point\"], figure = \"oc6\")\n\nmid2 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"interval\"], figure = \"oc6\")\n\nmid3 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"both\"], figure = \"oc6\")\n\nbot1 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"point\"], figure = \"oc6\")\n\nbot2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"interval\"], figure = \"oc6\")\n\nbot3 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"both\"], figure = \"oc6\")\n\n((top1|top2) / (mid1 | mid2 | mid3) / (bot1 | bot2 | bot3) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n\n```\n\n## Figure OC.7\n\n```{r fig_oc7}\n#| label: fig-oc7\n#| fig-cap: 'Scatterplot of the matching probabilities for event E13. The relationship between part 1 and part 2 separated by treatments with correlation coefficients and percentages above and below the diagonal.'\n\n\ntop1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE], figure = \"oc7\")\n\ntop2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE], figure = \"oc7\")\n\nmid1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"point\"], figure = \"oc7\")\n\nmid2 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"interval\"], figure = \"oc7\")\n\nmid3 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"both\"], figure = \"oc7\")\n\nbot1 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"point\"], figure = \"oc7\")\n\nbot2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"interval\"], figure = \"oc7\")\n\nbot3 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"both\"], figure = \"oc7\")\n\n((top1|top2) / (mid1 | mid2 | mid3) / (bot1 | bot2 | bot3) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n\n```\n\n\n## Figure OC.8\n\n```{r fig_oc8}\n#| label: fig-oc8\n#| fig-cap: 'Scatterplot of the matching probabilities for event E23. The relationship between part 1 and part 2 separated by treatments with correlation coefficients and percentages above and below the diagonal.'\n\n\ntop1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE], figure = \"oc8\")\n\ntop2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE], figure = \"oc8\")\n\nmid1 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"point\"], figure = \"oc8\")\n\nmid2 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"interval\"], figure = \"oc8\")\n\nmid3 <- plot_scatter_with_defaults(DT = wide_data[surprise == FALSE & communication == \"both\"], figure = \"oc8\")\n\nbot1 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"point\"], figure = \"oc8\")\n\nbot2 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"interval\"], figure = \"oc8\")\n\nbot3 <- plot_scatter_with_defaults(DT = wide_data[surprise == TRUE & communication == \"both\"], figure = \"oc8\")\n\n((top1|top2) / (mid1 | mid2 | mid3) / (bot1 | bot2 | bot3) & theme(legend.position = \"bottom\")) + plot_layout(guides = \"collect\")\n\n```\n\n## Session Info {-}\n\n```{r}\nsessionInfo()\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","embed-resources":true,"output-file":"C-online-appendix.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.132","bibliography":["references.bib"],"theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}}}
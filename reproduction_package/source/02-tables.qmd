# Tables 

This document explains how to reproduce the tables presented in the paper.

# Install Packages

We install the following packages using the `groundhog` package manager to increase computational reproducibility.

```{r install_packages}
#| output: false

options(repos = c(CRAN = "https://cran.r-project.org")) 


if (!requireNamespace("groundhog", quietly = TRUE)) {
    install.packages("groundhog")
}

pkgs <- c("magrittr", "data.table", "stringr", "lubridate", "knitr", 
          "sandwich", "lmtest",
          "sjPlot", "stargazer", "gt")

groundhog::groundhog.library(pkg = pkgs,
                             date = "2024-08-01")

rm(pkgs)
```

## Read Data

```{r read_data}
# data <- data.table::fread(file = "../data/processed/full.csv")
data <- readRDS(file="../data/processed/full.Rda")
```


## Table 2

This table was created in a manual process, the corresponding summary statistics can be queried using the following code, where `surprise == FALSE` selects the `confirmation` treatment arm:

```{r}
data[communication == "point" & surprise == FALSE,      # choose condition
     .(mean = round(mean(b, na.rm = TRUE), digits = 2), # choose variable
       sd = round(sd(b, na.rm = TRUE), digits = 2)),    # choose variable
     by = stage] %>% 
  kable()
```

The number of observations by treatment can be queried using the following code:

```{r}
data[, 
     .(N = length(unique(participant.label))), 
     by = c("communication", "surprise")][order(surprise, communication)] %>%
  kable()
# alternatively:
# data[stage == 2, 
#      .N, 
#      by = c("communication", "surprise")][order(surprise, communication)]
```

```{r}
# Melt the data
long_df <- melt(data,
                id.vars = c("stage", "surprise", "communication"),
                measure.vars = c("b", "a", "E1", "E2", "E3", "E12", "E13", "E23"),
                variable.name = "Variable",
                value.name = "Value")

# Function to calculate mean and sd
calculate_stats <- function(x) {
  c(mean = mean(x, na.rm = TRUE), sd = sd(x, na.rm = TRUE))
}

# Calculate pooled summary
pooled_summary <- long_df[, as.list(calculate_stats(Value)), by = .(Variable, stage)]
setnames(pooled_summary, c("mean", "sd"), c("mean_pooled", "sd_pooled"))

# Calculate summary by treatment
summary_tmp <- long_df[, as.list(calculate_stats(Value)), 
                       by = .(surprise, communication, Variable, stage)]

# Reshape summary_tmp to wide format
summary_wide <- dcast(summary_tmp, 
                      Variable + stage ~ surprise + communication, 
                      value.var = c("mean", "sd"))

# Merge pooled summary with reshaped summary
summary_table_wide <- merge(x = pooled_summary,
                            y = summary_wide, 
                            by = c("Variable", "stage"))

# Function to format mean and sd without line break
format_mean_sd <- function(mean, sd) {
  sprintf("%.2f (%.2f)", mean, sd)
}

# Apply formatting
cols_to_format <- names(summary_table_wide)[3:length(names(summary_table_wide))]
summary_table_wide[, (cols_to_format) := lapply(.SD, as.numeric), .SDcols = cols_to_format]
summary_table_wide[, c("Pooled", "Confirmation_point", "Confirmation_both", "Confirmation_interval", 
                       "Contradiction_point", "Contradiction_both", "Contradiction_interval") := 
                     .(format_mean_sd(mean_pooled, sd_pooled),
                       format_mean_sd(mean_FALSE_point, sd_FALSE_point),
                       format_mean_sd(mean_FALSE_both, sd_FALSE_both),
                       format_mean_sd(mean_FALSE_interval, sd_FALSE_interval),
                       format_mean_sd(mean_TRUE_point, sd_TRUE_point),
                       format_mean_sd(mean_TRUE_both, sd_TRUE_both),
                       format_mean_sd(mean_TRUE_interval, sd_TRUE_interval))]

# Select only the formatted columns
summary_table_final <- summary_table_wide[, .(Variable, stage, Pooled, 
                                              Confirmation_point, Confirmation_both, Confirmation_interval,
                                              Contradiction_point, Contradiction_both, Contradiction_interval)]

# Create gt table
summary_table_final %>% 
  gt(groupname_col = "Variable") %>% 
  cols_label(
    stage = "Stage",
    Pooled = "Pooled",
    Confirmation_point = "Point",
    Confirmation_both = "Point + interval",
    Confirmation_interval = "Interval",
    Contradiction_point = "Point",
    Contradiction_both = "Point + interval",
    Contradiction_interval = "Interval"
  ) %>%
  tab_spanner(
    label = "Confirmation",
    columns = c(Confirmation_point, Confirmation_both, Confirmation_interval)
  ) %>%
  tab_spanner(
    label = "Contradiction",
    columns = c(Contradiction_point, Contradiction_both, Contradiction_interval)
  ) %>%
  cols_align(
    align = "left",
    columns = c(Variable, stage)
  ) %>%
  cols_align(
    align = "center",
    columns = c(Pooled, Confirmation_point, Confirmation_both, Confirmation_interval,
                Contradiction_point, Contradiction_both, Contradiction_interval)
  ) %>%
  opt_row_striping() %>%
  tab_options(
    table.font.size = px(12),
    data_row.padding = px(4)
  )

```


## Table 3

```{r covariates}
#| eval: false
#| include: false
demographics <- c("age_35_52","age_53_plus","female", "high_education", "high_income", "married", "parentship")

all <- c(demographics, "high_temperature","high_usage","high_general_risk","high_weather_risk","high_accuracy","high_credibility")

ols_3_1 <- lm(formula = reformulate(c(demographics), response="b"),
            data = data,
            subset = (treated == FALSE))
se_3_1  <- coeftest(ols_3_1, vcov = vcovHC(ols_3_1, type = "HC1"))

ols_3_2 <- lm(formula = reformulate(c(all), response="b"),
            data = data,
            subset = (treated == FALSE))
se_3_2  <- coeftest(ols_3_2, vcov = vcovHC(ols_3_2, type = "HC1"))

ols_3_3 <- lm(formula = reformulate(c(demographics), response="a"),
            data = data,
            subset = (treated == FALSE))
se_3_3  <- coeftest(ols_3_3, vcov = vcovHC(ols_3_3, type = "HC1"))

ols_3_4 <- lm(formula = reformulate(c(all), response="a"),
            data = data,
            subset = (treated == FALSE))
se_3_4  <- coeftest(ols_3_4, vcov = vcovHC(ols_3_4, type = "HC1"))
```

```{r regression_models_table_3}
ols_3_1 <- lm(formula = b ~ age_35_52 + age_53_plus + female + high_education + high_income + 
    married + parentship, 
            data = data, 
            subset = (treated == FALSE))
se_3_1  <- coeftest(ols_3_1, vcov = vcovHC(ols_3_1, type = "HC1"))

ols_3_2 <- lm(formula = b ~ age_35_52 + age_53_plus + female + high_education + high_income + 
    married + parentship + high_temperature + high_usage + high_general_risk + 
    high_weather_risk + high_accuracy + high_credibility, 
            data = data, 
            subset = (treated == FALSE))
se_3_2  <- coeftest(ols_3_2, vcov = vcovHC(ols_3_2, type = "HC1"))

ols_3_3 <- lm(formula = a ~ age_35_52 + age_53_plus + female + high_education + high_income + 
    married + parentship, 
            data = data, 
            subset = (treated == FALSE))
se_3_3  <- coeftest(ols_3_3, vcov = vcovHC(ols_3_3, type = "HC1"))

ols_3_4 <- lm(formula = a ~ age_35_52 + age_53_plus + female + high_education + high_income + 
    married + parentship + high_temperature + high_usage + high_general_risk + 
    high_weather_risk + high_accuracy + high_credibility, 
            data = data, 
            subset = (treated == FALSE))
se_3_4  <- coeftest(ols_3_4, vcov = vcovHC(ols_3_4, type = "HC1"))
```

```{r regression_output_table_3}
#| results: asis

se_3 <- list(se_3_1[,2], se_3_2[,2], se_3_3[,2], se_3_4[,2])
p_3  <- list(se_3_1[,4], se_3_2[,4], se_3_3[,4], se_3_4[,4])

stargazer(ols_3_1, ols_3_2, ols_3_3, ols_3_4, 
          align = TRUE, 
          se = se_3, 
          p = p_3,   
          title = "Linear regressions: Explanatory analysis of Ambiguity Indices b and a",
          covariate.labels = c("age(35-52)",
                               "age(53-69)",
                               "gender (female)",
                               "high education",
                               "high income",
                               "family (married or same sex union)",
                               "parentship",
                               "high temperature (median)",
                               "high weather forecast usage (median)",
                               "high general risk attitude (median)",
                               "high weather risk attitude (median)",
                               "high accuracy (median)",
                               "high credibility (median)",
                               "Constant"), 
          font.size = "scriptsize",
          type = "html", 
          df = FALSE,
          style = "qje")
```

## Table 4

```{r}
ols_4_1 <- lm(formula = b ~ surprise + treated + surprise*treated, 
            data = data)
se_4_1  <- coeftest(x = ols_4_1, 
                    vcov = vcovCL(ols_4_1,
                                  cluster = ~data$participant.label,
                                  type = "HC1"))

ols_4_2 <- lm(formula = b ~ communication + treated + communication*treated, 
            data = data,
            subset = (surprise == FALSE))
se_4_2  <- coeftest(x = ols_4_2, 
                    vcov = vcovCL(ols_4_2,
                                  cluster = data[surprise == FALSE, participant.label],
                                  type = "HC1"))

ols_4_3 <- lm(formula = b ~ communication + treated + communication*treated, 
            data = data,
            subset = (surprise == TRUE))
se_4_3  <- coeftest(x = ols_4_3, 
                    vcov = vcovCL(ols_4_3,
                                  cluster = data[surprise == TRUE, participant.label],
                                  type = "HC1"))

ols_4_4 <- lm(formula = b ~ surprise + treated + surprise*treated, 
            data = data,
            subset = (communication == "point"))
se_4_4  <- coeftest(x = ols_4_4, 
                    vcov = vcovCL(ols_4_4,
                                  cluster = data[communication == "point", participant.label],
                                  type = "HC1"))

ols_4_5 <- lm(formula = b ~ surprise + treated + surprise*treated, 
            data = data,
            subset = (communication == "interval"))
se_4_5  <- coeftest(x = ols_4_5, 
                    vcov = vcovCL(ols_4_5,
                                  cluster = data[communication == "interval", participant.label],
                                  type = "HC1"))

ols_4_6 <- lm(formula = b ~ surprise + treated + surprise*treated, 
            data = data,
            subset = (communication == "both"))
se_4_6  <- coeftest(x = ols_4_6, 
                    vcov = vcovCL(ols_4_6,
                                  cluster = data[communication == "both", participant.label],
                                  type = "HC1"))
```

```{r regression_output_table_4}
#| results: asis

se_4 <- list(se_4_1[,2], se_4_2[,2], se_4_3[,2], se_4_4[,2], se_4_5[,2], se_4_6[,2])
p_4  <- list(se_4_1[,4], se_4_2[,4], se_4_3[,4], se_4_4[,4], se_4_5[,4], se_4_6[,4])

stargazer(ols_4_1, ols_4_2, ols_4_3, ols_4_4, ols_4_5, ols_4_6, 
          align = TRUE, 
          se = se_4, 
          p = p_4,   
          title = "Linear regressions: Treatment effects on ambiguity index b",
          dep.var.caption = "Dependent variable: b",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "interval x stage 2", "both x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html", 
          df = FALSE)

```

## Table 5

```{r}
ols_5_1 <- lm(formula = a ~ surprise + treated + surprise*treated,
              data = data)
se_5_1  <- coeftest(x = ols_5_1, 
                    vcov = vcovCL(ols_5_1,
                                  cluster = ~data$participant.label,
                                  type = "HC1"))

ols_5_2 <- lm(formula = a ~ communication + treated + communication*treated,
              data = data,
              subset = (surprise == FALSE))
se_5_2  <- coeftest(x = ols_5_2, 
                    vcov = vcovCL(ols_5_2,
                                  cluster = data[surprise == FALSE, participant.label],
                                  type = "HC1"))

ols_5_3 <- lm(formula = a ~ communication + treated + communication*treated,
              data = data,
              subset = (surprise == TRUE))
se_5_3  <- coeftest(x = ols_5_3, 
                    vcov = vcovCL(ols_5_3,
                                  cluster = data[surprise == TRUE, participant.label],
                                  type = "HC1"))

ols_5_4 <- lm(formula = a ~ surprise + treated + surprise*treated, 
              data = data,
              subset = (communication == "point"))
se_5_4  <- coeftest(x = ols_5_4, 
                    vcov = vcovCL(ols_5_4,
                                  cluster = data[communication == "point", participant.label],
                                  type = "HC1"))

ols_5_5 <- lm(formula = a ~ surprise + treated + surprise*treated, 
              data = data,
              subset = (communication == "interval"))
se_5_5  <- coeftest(x = ols_5_5, 
                    vcov = vcovCL(ols_5_5,
                                  cluster = data[communication == "interval", participant.label],
                                  type = "HC1"))

ols_5_6 <- lm(formula = a ~ surprise + treated + surprise*treated, 
              data = data,
              subset = (communication == "both"))
se_5_6  <- coeftest(x = ols_5_6, 
                    vcov = vcovCL(ols_5_6,
                                  cluster = data[communication == "both", participant.label],
                                  type = "HC1"))
```

```{r regression_output_table_5}
#| results: asis

se_5 <- list(se_5_1[,2], se_5_2[,2], se_5_3[,2], se_5_4[,2], se_5_5[,2], se_5_6[,2])
p_5  <- list(se_5_1[,4], se_5_2[,4], se_5_3[,4], se_5_4[,4], se_5_5[,4], se_5_6[,4])

stargazer(ols_5_1, ols_5_2, ols_5_3, ols_5_4, ols_5_5, ols_5_6, 
          align = TRUE, 
          se = se_5, 
          p = p_5,   
          title = "Linear regressions: Treatment effects on ambiguity index a",
          dep.var.caption = "Dependent variable: a",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "interval x stage 2", "both x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html", 
          df = FALSE)

```

## Table 6

```{r}
ols_6_1 <- lm(formula = ed ~ surprise, 
            data = data,
            subset = (stage == 2))
se_6_1  <- coeftest(ols_6_1, vcov = vcovHC(ols_6_1, type = "HC1"))

ols_6_2 <- lm(formula = ed ~ communication, 
            data = data,
            subset = (stage == 2 & surprise == FALSE))
se_6_2  <- coeftest(ols_6_2, vcov = vcovHC(ols_6_2, type = "HC1"))

ols_6_3 <- lm(formula = ed ~ communication, 
            data = data,
            subset = (stage == 2 & surprise == TRUE))
se_6_3  <- coeftest(ols_6_3, vcov = vcovHC(ols_6_3, type = "HC1"))

ols_6_4 <- lm(formula = ed ~ surprise, 
            data = data,
            subset = (stage == 2 & communication == "point"))
se_6_4  <- coeftest(ols_6_4, vcov = vcovHC(ols_6_4, type = "HC1"))

ols_6_5 <- lm(formula = ed ~ surprise, 
            data = data,
            subset = (stage == 2 & communication == "interval"))
se_6_5  <- coeftest(ols_6_5, vcov = vcovHC(ols_6_5, type = "HC1"))

ols_6_6 <- lm(formula = ed ~ surprise, 
            data = data,
            subset = (stage == 2 & communication == "both"))
se_6_6  <- coeftest(ols_6_6, vcov = vcovHC(ols_6_6, type = "HC1"))
```

```{r regression_output_table_6}
#| results: asis

se_6 <- list(se_6_1[,2], se_6_2[,2], se_6_3[,2], se_6_4[,2], se_6_5[,2], se_6_6[,2])
p_6  <- list(se_6_1[,4], se_6_2[,4], se_6_3[,4], se_6_4[,4], se_6_5[,4], se_6_6[,4])

stargazer(ols_6_1, ols_6_2, ols_6_3, ols_6_4, ols_6_5, ols_6_6, 
          align = TRUE, 
          se = se_6,
          p = p_6,   
          title = "Linear regressions: Treatment effects on Euclidian distance between vector of matching probabilities in stage 1 vs. stage 2",
          dep.var.caption = "Dependent variable: Euclidian distance stage 2 vs. stage 1",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "Constant"),
          font.size = "scriptsize",
          type = "html", 
          df = FALSE)

```

<!--
# Appendix B

```{r wrapper_function}
#| eval: false
event_regressions <- function(event = "E1"){
  ols_1 <- lm(formula = reformulate(c("surprise", "treated", "surprise*treated"), response = event),
              data = data)
  se_1  <- coeftest(x = ols_1, 
                    vcov = vcovCL(ols_1,
                                  cluster = ~data$participant.label,
                                  type = "HC1"))
  
  ols_2 <- lm(formula = reformulate(c("communication", "treated", "communication*treated"), response = event), 
              data = data,
              subset = (surprise == FALSE))
  se_2  <- coeftest(x = ols_2, 
                    vcov = vcovCL(ols_2,
                                  cluster = data[surprise == FALSE, participant.label],
                                  type = "HC1"))
  
  ols_3 <- lm(formula = reformulate(c("communication", "treated", "communication*treated"), response = event), 
              data = data,
              subset = (surprise == TRUE))
  se_3  <- coeftest(x = ols_3, 
                    vcov = vcovCL(ols_3,
                                  cluster = data[surprise == TRUE, participant.label],
                                  type = "HC1"))
  
  ols_4 <- lm(formula = reformulate(c("surprise", "treated", "surprise*treated"), response = event), 
              data = data,
              subset = (communication == "point"))
  se_4  <- coeftest(x = ols_4, 
                    vcov = vcovCL(ols_4,
                                  cluster = data[communication == "point", participant.label],
                                  type = "HC1"))
  
  ols_5 <- lm(formula = reformulate(c("surprise", "treated", "surprise*treated"), response = event), 
              data = data,
              subset = (communication == "interval"))
  se_5  <- coeftest(x = ols_5, 
                    vcov = vcovCL(ols_5,
                                  cluster = data[communication == "interval", participant.label],
                                  type = "HC1"))
  
  ols_6 <- lm(formula = reformulate(c("surprise", "treated", "surprise*treated"), response = event), 
              data = data,
              subset = (communication == "both"))
  se_6  <- coeftest(x = ols_6, 
                    vcov = vcovCL(ols_6,
                                  cluster = data[communication == "both", participant.label],
                                  type = "HC1"))


  
  se <- list(se_1[,2], se_2[,2], se_3[,2], se_4[,2], se_5[,2], se_6[,2])
  p  <- list(se_1[,4], se_2[,4], se_3[,4], se_4[,4], se_5[,4], se_6[,4])
  
  stargazer(ols_1, ols_2, ols_3, ols_4, ols_5, ols_6, 
            align = TRUE, 
            se = se, 
            p = p,   
            title = paste0("Linear regressions: Treatment effects on ", event),
            font.size = "scriptsize",
            type = "html", 
            df = FALSE)
}
```


## E1

```{r E1}
#| eval: false
#| results: asis
event_regressions(event = "E1")
```


## E2

```{r E2}
#| eval: false
#| results: asis
event_regressions(event = "E2")
```


## E3

```{r E3}
#| eval: false
#| results: asis
event_regressions(event = "E3")
```


## E12

```{r E12}
#| eval: false
#| results: asis
event_regressions(event = "E12")
```


## E13

```{r E13}
#| eval: false
#| results: asis
event_regressions(event = "E13")
```


## E23

```{r E23}
#| eval: false
#| results: asis
event_regressions(event = "E23")
```

-->
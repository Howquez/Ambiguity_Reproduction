# Online Appendix D

## Setup

### Install Packages

We install the following packages using the `groundhog` package manager to increase computational reproducibility.

```{r install_packages}
#| output: false

if (!requireNamespace("groundhog", quietly = TRUE)) {
  install.packages("groundhog")
}

pkgs <- c("magrittr", "data.table", "stringr", "Rmisc", "ggplot2", "patchwork",
          "rstatix", "ggpubr", "glue", "lubridate", "plyr", 
          "lmtest", "sandwich", "stargazer" # packages for regression tables
)

groundhog::groundhog.library(pkg = pkgs,
                             date = "2024-08-01")

rm(pkgs)
```

### Read Data

```{r read_data}
# data <- data.table::fread(file = "../data/processed/full.csv")
data <- readRDS(file="../data/processed/full.Rda")
```

### Design

We define some design features in the following:

```{r design_features}

colors <- c("#F3B05C", "#1E4A75", "#65B5C0", "#AD5E21")

layout <- theme(panel.background = element_rect(fill = "white"),
                legend.key = element_rect(fill = "white"),
                panel.grid.major.y = element_line(colour = "grey", 
                                                  linewidth = 0.25),
                axis.ticks.y = element_blank(),
                panel.grid.major.x = element_blank(),
                axis.line.x.bottom = element_line(colour = "#000000", 
                                                  linewidth = 0.5),
                axis.line.y.left = element_blank(),
                plot.title = element_text(size = rel(1))
)

```

## Helper Function

To avoid repetition, we define a set of helper functions. The first set of function creates visualizations. The second function serves as a wrapper for these functions and assembles them into one combined plot.

```{r level_1}
# Function to create the top panel
create_top_panel <- function(data, 
                             events = FALSE, 
                             interaction_term = "surpriseTRUE:treatedTRUE", 
                             plot_title = "Effect of contradiction (relative to confirmation)") {
  covariate_sets <- list(
    none = c("surprise", "treated", "surprise*treated"),
    demographics = c("surprise", "treated", "surprise*treated", 
                     "age_35_52", "age_53_plus", "female", "high_education", 
                     "high_income", "married", "parentship"),
    all = c("surprise", "treated", "surprise*treated", 
            "age_35_52", "age_53_plus", "female", "high_education", 
            "high_income", "married", "parentship",
            "high_temperature", "high_usage", "high_general_risk", 
            "high_weather_risk", "high_accuracy", "high_credibility")
  )
  
  if(events){
    outcome_vars <- c("E1", "E2", "E3", "E12", "E13", "E23")
  } else {
    outcome_vars <- c("a", "b")
  }
  
  ci_top <- data.frame()
  
  for (model_name in names(covariate_sets)) {
    for (LHS in outcome_vars) {
      formula <- reformulate(termlabels = covariate_sets[[model_name]], response = LHS)
      ols <- lm(formula = formula, data = data)
      
      tmp <- coefci(x = ols,
                    parm = interaction_term,
                    vcov = vcovCL(x = ols, cluster = data$participant.label, type = "HC1"),
                    level = 0.95) %>%
        as.data.frame() %>%
        mutate(model = model_name, outcome = LHS)
      
      tmp$center <- (tmp$`2.5 %` + tmp$`97.5 %`) / 2
      ci_top <- rbind(ci_top, tmp)
    }
  }
  
  ggplot(data = ci_top, mapping = aes(y = outcome)) +
    geom_pointrange(mapping = aes(x = center, y = outcome, xmin = `2.5 %`, xmax = `97.5 %`, shape = factor(model)),
                    position = position_dodge(width = 0.4), fatten = 5, alpha = 0.8) +
    geom_vline(xintercept = 0, color = "red", alpha = 0.66, show.legend = FALSE) +
    theme_bw() +
    labs(y = "Outcome Variable", x = "Estimate", shape = "Control variables", title = plot_title)
}

# function to create side panels (left and right)
create_side_panel <- function(data, 
                              events = FALSE,
                              outcome_vars, 
                              surprise_value, 
                              panel_title) {
  covariate_sets <- list(
    none = c("communication", "treated", "communication*treated"),
    demographics = c("communication", "treated", "communication*treated", 
                     "age_35_52", "age_53_plus", "female", "high_education", 
                     "high_income", "married", "parentship"),
    all = c("communication", "treated", "communication*treated", 
            "age_35_52", "age_53_plus", "female", "high_education", 
            "high_income", "married", "parentship",
            "high_temperature", "high_usage", "high_general_risk", 
            "high_weather_risk", "high_accuracy", "high_credibility")
  )
  
  if(events){
    outcome_vars <- c("E1", "E2", "E3", "E12", "E13", "E23")
  } else {
    outcome_vars <- c("a", "b")
  }
  
  ci_side <- data.frame()
  
  # Subset the data based on the surprise value
  subset_data <- subset(data, surprise == surprise_value)
  
  for (model_name in names(covariate_sets)) {
    for (LHS in outcome_vars) {
      ols <- lm(formula = reformulate(termlabels = covariate_sets[[model_name]], response = LHS),
                data = subset_data)
      
      for (communication in c("interval", "both")) {
        tmp <- coefci(x = ols,
                      parm = paste0("communication", communication, ":treatedTRUE"),
                      vcov = vcovCL(x = ols, cluster = subset_data$participant.label, type = "HC1"),
                      level = 0.95) %>%
          as.data.frame() %>%
          mutate(model = model_name, outcome = paste0(LHS, " (", communication, ")"))
        
        tmp$center <- (tmp$`2.5 %` + tmp$`97.5 %`) / 2
        ci_side <- rbind(ci_side, tmp)
      }
    }
  }
  
  ggplot(data = ci_side, mapping = aes(y = outcome)) +
    geom_pointrange(mapping = aes(x = center, y = outcome, xmin = `2.5 %`, xmax = `97.5 %`, shape = factor(model)),
                    position = position_dodge(width = 0.4), fatten = 5, alpha = 0.8) +
    geom_vline(xintercept = 0, color = "red", alpha = 0.66, show.legend = FALSE) +
    theme_bw() +
    labs(title = panel_title, y = "Outcome Variable", x = "Estimate", shape = "Control variables")
}

# Function to assemble all panels (unchanged)
assemble_panels <- function(top, left, right) {
  library(patchwork)
  (top / (left | right) & theme(legend.position = "bottom")) + plot_layout(guides = "collect")
}
```

```{r level_2}
wrapper <- function(show_events = FALSE,
                    dt = tmp){
  # Top panel
  top_panel <- create_top_panel(data = dt,
                                events = show_events,
                                plot_title = "Effect of contradiction (relative to confirmation)")
  
  # Left panel
  left_panel <- create_side_panel(data = dt,
                                       events = show_events,
                                       surprise_value = FALSE,
                                       panel_title = "Confirmation Treatments")
  
  # Right panel
  right_panel <- create_side_panel(data = dt,
                                        events = show_events,
                                        surprise_value = TRUE,
                                        panel_title = "Contradiction Treatments")
  
  # Aseembly
  plot <- assemble_panels(top_panel, left_panel, right_panel)
  
  plot
}

```


## Subsample 1: Good comprehension (yes or rather yes)

```{r comprehension_exclusion_1}
ex_1_N <- data[stage == 1 & str_detect(string = comprehension, pattern = "yes", negate = TRUE), .N]

tmp <- data[str_detect(string = comprehension, pattern = "yes", negate = FALSE)]
```

We perceive the tasks as cognitively demanding for the experimental participants. Not understanding the tasks could have led to additional noise in the data set. To exclude this as a factor influencing our results, we excluded participants who self-reported not understanding the experiment well or rather well. In the process, we excluded `r ex_1_N` participants for this robustness check.

### Table OD.1

```{r}
#| results: asis
#| label: tbl-OD1
#| tbl-cap: " "
ols_1 <- lm(formula = b ~ surprise + treated + surprise * treated,
            data = tmp)
se_1  <- coeftest(x = ols_1, 
                  vcov = vcovCL(ols_1,
                                cluster = ~tmp$participant.label,
                                type = "HC1"))

ols_2 <- lm(formula = b ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == FALSE))
se_2  <- coeftest(x = ols_2, 
                  vcov = vcovCL(ols_2,
                                cluster = tmp[surprise == FALSE, participant.label],
                                type = "HC1"))

ols_3 <- lm(formula = b ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == TRUE))
se_3  <- coeftest(x = ols_3, 
                  vcov = vcovCL(ols_3,
                                cluster = tmp[surprise == TRUE, participant.label],
                                type = "HC1"))

ols_4 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "point"))
se_4  <- coeftest(x = ols_4, 
                  vcov = vcovCL(ols_4,
                                cluster = tmp[communication == "point", participant.label],
                                type = "HC1"))

ols_5 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "interval"))
se_5  <- coeftest(x = ols_5, 
                  vcov = vcovCL(ols_5,
                                cluster = tmp[communication == "interval", participant.label],
                                type = "HC1"))

ols_6 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "both"))
se_6  <- coeftest(x = ols_6, 
                  vcov = vcovCL(ols_6,
                                cluster = tmp[communication == "both", participant.label],
                                type = "HC1"))



se <- list(se_1[,2], se_2[,2], se_3[,2], se_4[,2], se_5[,2], se_6[,2])
p  <- list(se_1[,4], se_2[,4], se_3[,4], se_4[,4], se_5[,4], se_6[,4])

stargazer(ols_1, ols_2, ols_3, ols_4, ols_5, ols_6, 
          align = TRUE, 
          se = se, 
          p = p,   
          title = "Linear regressions: Treatment effects on b",
          dep.var.caption = "Dependent variable: b",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "both x stage 2", "interval x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html", 
          df = FALSE)
```

### Table OD.2

```{r}
#| results: asis
#| label: tbl-OD2
#| tbl-cap: " "

ols_1 <- lm(formula = a ~ surprise + treated + surprise * treated,
            data = tmp)
se_1  <- coeftest(x = ols_1, 
                  vcov = vcovCL(ols_1,
                                cluster = ~tmp$participant.label,
                                type = "HC1"))

ols_2 <- lm(formula = a ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == FALSE))
se_2  <- coeftest(x = ols_2, 
                  vcov = vcovCL(ols_2,
                                cluster = tmp[surprise == FALSE, participant.label],
                                type = "HC1"))

ols_3 <- lm(formula = a ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == TRUE))
se_3  <- coeftest(x = ols_3, 
                  vcov = vcovCL(ols_3,
                                cluster = tmp[surprise == TRUE, participant.label],
                                type = "HC1"))

ols_4 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "point"))
se_4  <- coeftest(x = ols_4, 
                  vcov = vcovCL(ols_4,
                                cluster = tmp[communication == "point", participant.label],
                                type = "HC1"))

ols_5 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "interval"))
se_5  <- coeftest(x = ols_5, 
                  vcov = vcovCL(ols_5,
                                cluster = tmp[communication == "interval", participant.label],
                                type = "HC1"))

ols_6 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "both"))
se_6  <- coeftest(x = ols_6, 
                  vcov = vcovCL(ols_6,
                                cluster = tmp[communication == "both", participant.label],
                                type = "HC1"))



se <- list(se_1[,2], se_2[,2], se_3[,2], se_4[,2], se_5[,2], se_6[,2])
p  <- list(se_1[,4], se_2[,4], se_3[,4], se_4[,4], se_5[,4], se_6[,4])

stargazer(ols_1, ols_2, ols_3, ols_4, ols_5, ols_6, 
          align = TRUE, 
          se = se, 
          p = p,   
          title = "Linear regressions: Treatment effects on a",
          dep.var.caption = "Dependent variable: a",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "both x stage 2", "interval x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html", 
          notes = c("The underlying standard errors (“HC1”, in parentheses) are clustered at the individual level",
                    "and estimated with the R package sandwich (Zeileis 2004; Zeileis et al. 2020)"),
          notes.align = "l",
          df = FALSE)

```

### Figure OD.1

```{r}
#| label: fig-OD1
#| fig-cap: "Treatment effects of regression equation (1) with dependent variables b and a (Subsample 1). Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020)."
#| 
wrapper(show_events = FALSE, dt = tmp)
```

### Figure OD.2

```{r}
#| label: fig-OD2
#| fig-cap: "Treatment effects of regression equation (1) with matching probabilities for all events as dependent variables (Subsample 1). Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020)."
#| 
wrapper(show_events = TRUE, dt = tmp)
```


## Subsample 2: No wrong answers in the control questions

```{r comprehension_exclusion_2}
rm(tmp)

ex_2_N <- data[, length(unique(participant.label))] - data[wrong_answer_1==0 & wrong_answer_2==0, length(unique(participant.label))]

tmp <- data[wrong_answer_1==0 & wrong_answer_2==0]
```

Using a similar rationale as in subsample 1, we excluded participants who had at least one error
in the control questions. In doing so, we removed `r ex_2_N` participants. Apart from the different exclusion criterion, the code producing the corresponding tables looks exactly the same.

### Table OD.3

```{r}
#| results: asis
#| label: tbl-OD3
#| tbl-cap: " "

ols_1 <- lm(formula = b ~ surprise + treated + surprise * treated,
            data = tmp)
se_1  <- coeftest(x = ols_1, 
                  vcov = vcovCL(ols_1,
                                cluster = ~tmp$participant.label,
                                type = "HC1"))

ols_2 <- lm(formula = b ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == FALSE))
se_2  <- coeftest(x = ols_2, 
                  vcov = vcovCL(ols_2,
                                cluster = tmp[surprise == FALSE, participant.label],
                                type = "HC1"))

ols_3 <- lm(formula = b ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == TRUE))
se_3  <- coeftest(x = ols_3, 
                  vcov = vcovCL(ols_3,
                                cluster = tmp[surprise == TRUE, participant.label],
                                type = "HC1"))

ols_4 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "point"))
se_4  <- coeftest(x = ols_4, 
                  vcov = vcovCL(ols_4,
                                cluster = tmp[communication == "point", participant.label],
                                type = "HC1"))

ols_5 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "interval"))
se_5  <- coeftest(x = ols_5, 
                  vcov = vcovCL(ols_5,
                                cluster = tmp[communication == "interval", participant.label],
                                type = "HC1"))

ols_6 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "both"))
se_6  <- coeftest(x = ols_6, 
                  vcov = vcovCL(ols_6,
                                cluster = tmp[communication == "both", participant.label],
                                type = "HC1"))



se <- list(se_1[,2], se_2[,2], se_3[,2], se_4[,2], se_5[,2], se_6[,2])
p  <- list(se_1[,4], se_2[,4], se_3[,4], se_4[,4], se_5[,4], se_6[,4])

stargazer(ols_1, ols_2, ols_3, ols_4, ols_5, ols_6, 
          align = TRUE, 
          se = se, 
          p = p,   
          title = "Linear regressions: Treatment effects on b",
          dep.var.caption = "Dependent variable: b",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "both x stage 2", "interval x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html",
          df = FALSE,
          notes = c("The underlying standard errors (“HC1”, in parentheses) are clustered at the individual level and estimated with the R package sandwich (Zeileis 2004; Zeileis et al. 2020)"),
          notes.align = "l")
```

### Table OD.4

```{r}
#| results: asis
#| label: tbl-OD4
#| tbl-cap: " "

ols_1 <- lm(formula = a ~ surprise + treated + surprise * treated,
            data = tmp)
se_1  <- coeftest(x = ols_1, 
                  vcov = vcovCL(ols_1,
                                cluster = ~tmp$participant.label,
                                type = "HC1"))

ols_2 <- lm(formula = a ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == FALSE))
se_2  <- coeftest(x = ols_2, 
                  vcov = vcovCL(ols_2,
                                cluster = tmp[surprise == FALSE, participant.label],
                                type = "HC1"))

ols_3 <- lm(formula = a ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == TRUE))
se_3  <- coeftest(x = ols_3, 
                  vcov = vcovCL(ols_3,
                                cluster = tmp[surprise == TRUE, participant.label],
                                type = "HC1"))

ols_4 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "point"))
se_4  <- coeftest(x = ols_4, 
                  vcov = vcovCL(ols_4,
                                cluster = tmp[communication == "point", participant.label],
                                type = "HC1"))

ols_5 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "interval"))
se_5  <- coeftest(x = ols_5, 
                  vcov = vcovCL(ols_5,
                                cluster = tmp[communication == "interval", participant.label],
                                type = "HC1"))

ols_6 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "both"))
se_6  <- coeftest(x = ols_6, 
                  vcov = vcovCL(ols_6,
                                cluster = tmp[communication == "both", participant.label],
                                type = "HC1"))



se <- list(se_1[,2], se_2[,2], se_3[,2], se_4[,2], se_5[,2], se_6[,2])
p  <- list(se_1[,4], se_2[,4], se_3[,4], se_4[,4], se_5[,4], se_6[,4])

stargazer(ols_1, ols_2, ols_3, ols_4, ols_5, ols_6, 
          align = TRUE, 
          se = se, 
          p = p,   
          title = "Linear regressions: Treatment effects on a",
          dep.var.caption = "Dependent variable: a",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "both x stage 2", "interval x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html",
          df = FALSE,
          notes = c("The underlying standard errors (“HC1”, in parentheses) are clustered at the individual level and estimated with the R package sandwich (Zeileis 2004; Zeileis et al. 2020)"),
          notes.align = "l")

```


### Figure OD.3

```{r}
#| label: fig-OD3
#| fig-cap: "Treatment effects of regression equation (1) with dependent variables b and a (Subsample 2). Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020)."
#| 
wrapper(show_events = FALSE, dt = tmp)
```

### Figure OD.4

```{r}
#| label: fig-OD4
#| fig-cap: "Treatment effects of regression equation (1) with matching probabilities for all events as dependent variables (Subsample 2). Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020)."
#| 
wrapper(show_events = TRUE, dt = tmp)
```

## Subsample 3: Survey experiment completion time 10%-90% quantile

```{r}
rm(tmp)

lo_quantile <- data[, quantile(x = completion_time, probs = 0.1)]
hi_quantile <- data[, quantile(x = completion_time, probs = 0.9)]

lo_time <- seconds_to_period(lo_quantile)
hi_time <- seconds_to_period(hi_quantile)

ex_3_N <- data[, length(unique(participant.label))] - data[completion_time > lo_quantile & completion_time < hi_quantile, length(unique(participant.label))]

tmp <- data[completion_time > lo_quantile & completion_time < hi_quantile]

```


We believe that excessively fast participants could introduce additional noise. We also believe that participants doing other things on the side and who may have been very slow in the experiment could cause a similar effect. As a result, we removed participants who took less than `r lo_time@minute` minutes `r lo_time@.Data` (10 percent quantile) and more than `r hi_time@minute` minutes `r hi_time@.Data` seconds (90 percent quantile). This is equivalent to a removal of `r ex_3_N` participants.

Apart from the different exclusion criterion, the code producing the corresponding tables looks exactly the same.

### Table OD.5

```{r}
#| results: asis
#| label: tbl-OD5
#| tbl-cap: " "

ols_1 <- lm(formula = b ~ surprise + treated + surprise * treated,
            data = tmp)
se_1  <- coeftest(x = ols_1, 
                  vcov = vcovCL(ols_1,
                                cluster = ~tmp$participant.label,
                                type = "HC1"))

ols_2 <- lm(formula = b ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == FALSE))
se_2  <- coeftest(x = ols_2, 
                  vcov = vcovCL(ols_2,
                                cluster = tmp[surprise == FALSE, participant.label],
                                type = "HC1"))

ols_3 <- lm(formula = b ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == TRUE))
se_3  <- coeftest(x = ols_3, 
                  vcov = vcovCL(ols_3,
                                cluster = tmp[surprise == TRUE, participant.label],
                                type = "HC1"))

ols_4 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "point"))
se_4  <- coeftest(x = ols_4, 
                  vcov = vcovCL(ols_4,
                                cluster = tmp[communication == "point", participant.label],
                                type = "HC1"))

ols_5 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "interval"))
se_5  <- coeftest(x = ols_5, 
                  vcov = vcovCL(ols_5,
                                cluster = tmp[communication == "interval", participant.label],
                                type = "HC1"))

ols_6 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "both"))
se_6  <- coeftest(x = ols_6, 
                  vcov = vcovCL(ols_6,
                                cluster = tmp[communication == "both", participant.label],
                                type = "HC1"))



se <- list(se_1[,2], se_2[,2], se_3[,2], se_4[,2], se_5[,2], se_6[,2])
p  <- list(se_1[,4], se_2[,4], se_3[,4], se_4[,4], se_5[,4], se_6[,4])

stargazer(ols_1, ols_2, ols_3, ols_4, ols_5, ols_6, 
          align = TRUE, 
          se = se, 
          p = p,   
          title = "Linear regressions: Treatment effects on b",
          dep.var.caption = "Dependent variable: b",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "both x stage 2", "interval x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html",
          df = FALSE,
          notes = c("The underlying standard errors (“HC1”, in parentheses) are clustered at the individual level and estimated with the R package sandwich (Zeileis 2004; Zeileis et al. 2020)"),
          notes.align = "l")
```

### Table OD.6

```{r}
#| results: asis
#| label: tbl-OD6
#| tbl-cap: " "

ols_1 <- lm(formula = a ~ surprise + treated + surprise * treated,
            data = tmp)
se_1  <- coeftest(x = ols_1, 
                  vcov = vcovCL(ols_1,
                                cluster = ~tmp$participant.label,
                                type = "HC1"))

ols_2 <- lm(formula = a ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == FALSE))
se_2  <- coeftest(x = ols_2, 
                  vcov = vcovCL(ols_2,
                                cluster = tmp[surprise == FALSE, participant.label],
                                type = "HC1"))

ols_3 <- lm(formula = a ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == TRUE))
se_3  <- coeftest(x = ols_3, 
                  vcov = vcovCL(ols_3,
                                cluster = tmp[surprise == TRUE, participant.label],
                                type = "HC1"))

ols_4 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "point"))
se_4  <- coeftest(x = ols_4, 
                  vcov = vcovCL(ols_4,
                                cluster = tmp[communication == "point", participant.label],
                                type = "HC1"))

ols_5 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "interval"))
se_5  <- coeftest(x = ols_5, 
                  vcov = vcovCL(ols_5,
                                cluster = tmp[communication == "interval", participant.label],
                                type = "HC1"))

ols_6 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "both"))
se_6  <- coeftest(x = ols_6, 
                  vcov = vcovCL(ols_6,
                                cluster = tmp[communication == "both", participant.label],
                                type = "HC1"))



se <- list(se_1[,2], se_2[,2], se_3[,2], se_4[,2], se_5[,2], se_6[,2])
p  <- list(se_1[,4], se_2[,4], se_3[,4], se_4[,4], se_5[,4], se_6[,4])

stargazer(ols_1, ols_2, ols_3, ols_4, ols_5, ols_6, 
          align = TRUE, 
          se = se, 
          p = p,   
          title = "Linear regressions: Treatment effects on a",
          dep.var.caption = "Dependent variable: a",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "both x stage 2", "interval x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html",
          df = FALSE,
          notes = c("The underlying standard errors (“HC1”, in parentheses) are clustered at the individual level and estimated with the R package sandwich (Zeileis 2004; Zeileis et al. 2020)"),
          notes.align = "l")

```

### Figure OD.5

```{r}
#| label: fig-OD5
#| fig-cap: "Treatment effects of regression equation (1) with dependent variables b and a (Subsample 3). Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020)."
#| 
wrapper(show_events = FALSE, dt = tmp)
```

### Figure OD.6

```{r}
#| label: fig-OD6
#| fig-cap: "Treatment effects of regression equation (1) with matching probabilities for all events as dependent variables (Subsample 3). Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020)."
#| 
wrapper(show_events = TRUE, dt = tmp)
```

## Subsample 4: Weakly monotonic answers $(\overline{m_s}\leq\overline{m_c})$

```{r ignore_violators}
rm(tmp)

violators <- data[mc < ms, unique(participant.label)]

tmp <- data[!(participant.label %in% violators)]
```

In this subsample, we removed participants who violated weak monotonicity for the averaged
single vs. combined events ($\overline{m_s}\leq\overline{m_c}$) at least once (either part 1 or part 2). This ensures that index $a$ is 1 or less than 1. @Baillon_2018a also use this robustness check. We excluded `r length(violators)` participants.

Apart from the different exclusion criterion, the code producing the corresponding tables looks exactly the same.

### Table OD.7

```{r}
#| results: asis
#| label: tbl-OD7
#| tbl-cap: " "

ols_1 <- lm(formula = b ~ surprise + treated + surprise * treated,
            data = tmp)
se_1  <- coeftest(x = ols_1, 
                  vcov = vcovCL(ols_1,
                                cluster = ~tmp$participant.label,
                                type = "HC1"))

ols_2 <- lm(formula = b ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == FALSE))
se_2  <- coeftest(x = ols_2, 
                  vcov = vcovCL(ols_2,
                                cluster = tmp[surprise == FALSE, participant.label],
                                type = "HC1"))

ols_3 <- lm(formula = b ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == TRUE))
se_3  <- coeftest(x = ols_3, 
                  vcov = vcovCL(ols_3,
                                cluster = tmp[surprise == TRUE, participant.label],
                                type = "HC1"))

ols_4 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "point"))
se_4  <- coeftest(x = ols_4, 
                  vcov = vcovCL(ols_4,
                                cluster = tmp[communication == "point", participant.label],
                                type = "HC1"))

ols_5 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "interval"))
se_5  <- coeftest(x = ols_5, 
                  vcov = vcovCL(ols_5,
                                cluster = tmp[communication == "interval", participant.label],
                                type = "HC1"))

ols_6 <- lm(formula = b ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "both"))
se_6  <- coeftest(x = ols_6, 
                  vcov = vcovCL(ols_6,
                                cluster = tmp[communication == "both", participant.label],
                                type = "HC1"))



se <- list(se_1[,2], se_2[,2], se_3[,2], se_4[,2], se_5[,2], se_6[,2])
p  <- list(se_1[,4], se_2[,4], se_3[,4], se_4[,4], se_5[,4], se_6[,4])

stargazer(ols_1, ols_2, ols_3, ols_4, ols_5, ols_6, 
          align = TRUE, 
          se = se, 
          p = p,   
          title = "Linear regressions: Treatment effects on b",
          dep.var.caption = "Dependent variable: b",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "both x stage 2", "interval x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html",
          df = FALSE,
          notes = c("The underlying standard errors (“HC1”, in parentheses) are clustered at the individual level and estimated with the R package sandwich (Zeileis 2004; Zeileis et al. 2020)"),
          notes.align = "l")
```


### Table OD.8

```{r}
#| results: asis
#| label: tbl-OD8

ols_1 <- lm(formula = a ~ surprise + treated + surprise * treated,
            data = tmp)
se_1  <- coeftest(x = ols_1, 
                  vcov = vcovCL(ols_1,
                                cluster = ~tmp$participant.label,
                                type = "HC1"))

ols_2 <- lm(formula = a ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == FALSE))
se_2  <- coeftest(x = ols_2, 
                  vcov = vcovCL(ols_2,
                                cluster = tmp[surprise == FALSE, participant.label],
                                type = "HC1"))

ols_3 <- lm(formula = a ~ communication + treated + communication * treated, 
            data = tmp,
            subset = (surprise == TRUE))
se_3  <- coeftest(x = ols_3, 
                  vcov = vcovCL(ols_3,
                                cluster = tmp[surprise == TRUE, participant.label],
                                type = "HC1"))

ols_4 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "point"))
se_4  <- coeftest(x = ols_4, 
                  vcov = vcovCL(ols_4,
                                cluster = tmp[communication == "point", participant.label],
                                type = "HC1"))

ols_5 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "interval"))
se_5  <- coeftest(x = ols_5, 
                  vcov = vcovCL(ols_5,
                                cluster = tmp[communication == "interval", participant.label],
                                type = "HC1"))

ols_6 <- lm(formula = a ~ surprise + treated + surprise * treated, 
            data = tmp,
            subset = (communication == "both"))
se_6  <- coeftest(x = ols_6, 
                  vcov = vcovCL(ols_6,
                                cluster = tmp[communication == "both", participant.label],
                                type = "HC1"))



se <- list(se_1[,2], se_2[,2], se_3[,2], se_4[,2], se_5[,2], se_6[,2])
p  <- list(se_1[,4], se_2[,4], se_3[,4], se_4[,4], se_5[,4], se_6[,4])

stargazer(ols_1, ols_2, ols_3, ols_4, ols_5, ols_6, 
          align = TRUE, 
          se = se, 
          p = p,   
          title = "Linear regressions: Treatment effects on a",
          dep.var.caption = "Dependent variable: a",
          dep.var.labels = " ",
          model.names = FALSE,
          column.labels = c("full", "confirmation", "contradiction", "point", "interval", "both"),
          covariate.labels = c("contradiction", "both", "interval", "stage 2", "contradiction x stage 2", "both x stage 2", "interval x stage 2", "Constant"),
          font.size = "scriptsize",
          type = "html",
          df = FALSE,
          notes = c("The underlying standard errors (“HC1”, in parentheses) are clustered at the individual level and estimated with the R package sandwich (Zeileis 2004; Zeileis et al. 2020)"),
          notes.align = "l")

```

### Figure OD.7

```{r}
#| label: fig-OD7
#| fig-cap: "Treatment effects of regression equation (1) with dependent variables b and a (Subsample 4). Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020)."
#| 
wrapper(show_events = FALSE, dt = tmp)
```

### Figure OD.8

```{r}
#| label: fig-OD8
#| fig-cap: "Treatment effects of regression equation (1) with matching probabilities for all events as dependent variables (Subsample 4). Estimators with 95% confidence intervals. The underlying standard errors (“HC1”) are clustered at the individual level and estimated with the R package sandwich (Zeileis, 2004; Zeileis et al., 2020)."
#| 
wrapper(show_events = TRUE, dt = tmp)
```

## Session Info {-}

```{r}
sessionInfo()
```



## References {-}